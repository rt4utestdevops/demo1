package t4u.ironMining;

import java.util.ArrayList;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import t4u.beans.LoginInfoBean;
import t4u.beans.ReportHelper;
import t4u.functions.CommonFunctions;
import t4u.functions.IronMiningFunction;

public class MonthlyReturnsAction extends Action {
	public ActionForward execute(ActionMapping mapping, ActionForm form,HttpServletRequest request, HttpServletResponse response) {
		try {
			HttpSession session = request.getSession();
			String param = "";
			int systemId = 0;
			int userId = 0;
			int customerId = 0;
			int custId=0;
			int offset = 0;
			String zone = "";
			String message = "";
			String lang ="";
			LoginInfoBean loginInfo = (LoginInfoBean) session.getAttribute("loginInfoDetails");
			if (loginInfo != null) {
				systemId = loginInfo.getSystemId();
				userId = loginInfo.getUserId();
				customerId = loginInfo.getCustomerId();
				offset = loginInfo.getOffsetMinutes();
				zone = loginInfo.getZone();
				lang = loginInfo.getLanguage();
				IronMiningFunction ironMiningFunction = new IronMiningFunction();
				CommonFunctions cf=new CommonFunctions();
				JSONArray jsonArray = null;
				JSONObject jsonObject = null;
				if (request.getParameter("param") != null) {
					param = request.getParameter("param").toString();
				}
				if (param.equalsIgnoreCase("getMonthlyReturns")) {
					jsonObject = new JSONObject();
					jsonArray = new JSONArray();
					int custsId = 0;
					String custName="";
					String startDate="";
					String endDate = "";
					String jspName = "";
					String userAuthority="";
					try {
						if(request.getParameter("custId") != null && !request.getParameter("custId").equals("") && request.getParameter("custName") != null && !request.getParameter("custName").equals("") && request.getParameter("jspName") != null && !request.getParameter("jspName").equals("")){
							custsId = Integer.parseInt(request.getParameter("custId"));
							custName = request.getParameter("custName");
							jspName = request.getParameter("jspName");							
						}
						if(request.getParameter("startdate") != null && !request.getParameter("startdate").equals("") && request.getParameter("enddate") != null && !request.getParameter("enddate").equals("")){
							startDate = request.getParameter("startdate");
							startDate = startDate.replace('T', ' ');
							endDate = request.getParameter("enddate");
							endDate = endDate.replace('T', ' ');
						}
						if(request.getParameter("userAuthority") != null && !request.getParameter("userAuthority").equals("")){
							userAuthority = request.getParameter("userAuthority");
						}
						ArrayList < Object > list = ironMiningFunction.getMonthlyReturns(systemId,custsId,userId,userAuthority,startDate,endDate,lang);
						jsonArray = (JSONArray) list.get(0);
						if (jsonArray.length() > 0) {
							jsonObject.put("monthlyReturnRoot", jsonArray);
						} else {
							jsonObject.put("monthlyReturnRoot", "");
						}
						ReportHelper reportHelper = (ReportHelper) list.get(1);
						request.getSession().setAttribute(jspName, reportHelper);
		                request.getSession().setAttribute("custId", custName);
						response.getWriter().print(jsonObject.toString());
					} catch (Exception e) {
						e.printStackTrace();
					}
				}else if (param.equalsIgnoreCase("getListOfLabourAndWages")) {
					jsonObject = new JSONObject();
					jsonArray = new JSONArray();
					try {
						jsonArray = ironMiningFunction.getListOfLabourAndWages();
						if (jsonArray.length() > 0) {
							jsonObject.put("employmentRoot", jsonArray);
						} else {
							jsonObject.put("employmentRoot", "");
						}
						response.getWriter().print(jsonObject.toString());
					} catch (Exception e) {
						e.printStackTrace();
					}
				}else if (param.equalsIgnoreCase("getDetailsOfDeductionsList")) {
					jsonObject = new JSONObject();
					jsonArray = new JSONArray();
					try {
						int autoGeneratedId = 0;
						if(request.getParameter("autoGeneratedId") != null && !request.getParameter("autoGeneratedId").equals("")){
							autoGeneratedId = Integer.parseInt(request.getParameter("autoGeneratedId")); 
						}
						jsonArray = ironMiningFunction.getDetailsOfDeductionsLists(autoGeneratedId);
						if (jsonArray.length() > 0) {
							jsonObject.put("detailsOfDeductionsRoot", jsonArray);
						} else {
							jsonObject.put("detailsOfDeductionsRoot", "");
						}
						response.getWriter().print(jsonObject.toString());
					} catch (Exception e) {
						e.printStackTrace();
					}
				}else if (param.equalsIgnoreCase("getOreProductionList")) {
					jsonObject = new JSONObject();
					jsonArray = new JSONArray();
					try {
						String typeOfOre = "";
						int id = 0;
						int autoGeneratedId = 0;
						if(request.getParameter("typeOfOre") != null && !request.getParameter("typeOfOre").equals("")){
							typeOfOre = request.getParameter("typeOfOre");
						}
						if(request.getParameter("autoGeneratedId") != null && !request.getParameter("autoGeneratedId").equals("")){
							autoGeneratedId = Integer.parseInt(request.getParameter("autoGeneratedId")); 
						}
						if(request.getParameter("custId") != null && !request.getParameter("custId").equals("")){
							custId = Integer.parseInt(request.getParameter("custId"));
						}
						jsonArray = ironMiningFunction.getOreProductionLists(typeOfOre,autoGeneratedId,custId,systemId);
						if (jsonArray.length() > 0) {
							jsonObject.put("OreProductionRoot", jsonArray);
						} else {
							jsonObject.put("OreProductionRoot", "");
						}
						response.getWriter().print(jsonObject.toString());
					} catch (Exception e) {
						e.printStackTrace();
					}
				}else if (param.equalsIgnoreCase("getGradeWiseProductionDespatchList")) {
					jsonObject = new JSONObject();
					jsonArray = new JSONArray();
					try {
						String mineralName = "";
						int autoGeneratedId = 0;
						if(request.getParameter("typeOfOre") != null && !request.getParameter("typeOfOre").equals("")){
							mineralName = request.getParameter("typeOfOre");
						}
						if(request.getParameter("autoGeneratedId") != null && !request.getParameter("autoGeneratedId").equals("")){
							autoGeneratedId = Integer.parseInt(request.getParameter("autoGeneratedId")); 
						}
						jsonArray = ironMiningFunction.getGradeWiseProductionDespatchLists(mineralName,"Grades",autoGeneratedId);
						if (jsonArray.length() > 0) {
							jsonObject.put("gradeWiseProductionRoot", jsonArray);
						} else {
							jsonObject.put("gradeWiseProductionRoot", "");
						}
						response.getWriter().print(jsonObject.toString());
					} catch (Exception e) {
						e.printStackTrace();
					}
				}
				else if (param.equalsIgnoreCase("getListOfTCNo")) {
					jsonObject = new JSONObject();
					jsonArray = new JSONArray();
					try {	
						if(request.getParameter("custId") != null && !request.getParameter("custId").equals("")){
							custId = Integer.parseInt(request.getParameter("custId")); 
						}
						jsonArray = ironMiningFunction.getListOfTCNo(systemId,custId);
						if (jsonArray.length() > 0) {
							jsonObject.put("TCNoComboStoreRoot", jsonArray);
						} else {
							jsonObject.put("TCNoComboStoreRoot", "");
						}
						response.getWriter().print(jsonObject.toString());
					} catch (Exception e) { 
						e.printStackTrace();
					}
				}
				else if (param.equalsIgnoreCase("getNameAndAddress")) {
					jsonObject = new JSONObject();
					jsonArray = new JSONArray();
					try {
						if(request.getParameter("custId") != null && !request.getParameter("custId").equals("")){
							custId = Integer.parseInt(request.getParameter("custId")); 
						}
						jsonArray = ironMiningFunction.getNameAndAddress(systemId,custId);
						if (jsonArray.length() > 0) {
							jsonObject.put("nameAndAddressStoreRoot", jsonArray);
						} else {
							jsonObject.put("nameAndAddressStoreRoot", "");
						}						
						response.getWriter().print(jsonObject.toString());
					} catch (Exception e) { 
						e.printStackTrace();
					}
				}else if (param.equalsIgnoreCase("insertGeneralAndLabourDetails")) {
					int autoGeneratedKeys = 0;
					 try {
						 float rentPaid = 0;
						 float royaltyPaid = 0;
						 float deadRent = 0;
						 float challanDetails1 = 0;
						 float challanDetails2 = 0;
						 int mineWorked = 0;
						 int workStopped = 0;
						 String stoppedReason = "";
						 int technicalStaff = 0;
						 float totalSalary = 0;
						 String custName = "";
						 String date = request.getParameter("date");
						 date = date.replace('T', ' ');
						 String region = request.getParameter("region");
						 String pin = request.getParameter("pin");
						 String regNo = request.getParameter("regNo");
						 int mineCode = 0;
						 String mineralsName = request.getParameter("mineralsName");
						 String tcNoId = request.getParameter("tcNoId");
						 String mineId = request.getParameter("mineId");
						 String otherMine = "";
						 String otherStoppedReason=request.getParameter("otherStoppedReason");
						 String nameAndAddress = request.getParameter("nameAndAddress");
						 int generatedkey = 0;
						 if(request.getParameter("mineCode") != null && !request.getParameter("mineCode").equals("")){
							 mineCode = Integer.parseInt(request.getParameter("mineCode")); 
						 }
						 if(request.getParameter("autoGeneratedId") != null && !request.getParameter("autoGeneratedId").equals("")){
							 generatedkey = Integer.parseInt(request.getParameter("autoGeneratedId")); 
						 }
						 if(request.getParameter("custId") != null && !request.getParameter("custId").equals("")){
							 custId = Integer.parseInt(request.getParameter("custId")); 
						 }
						 if(request.getParameter("custName") != null && !request.getParameter("custName").equals("")){
							 custName = request.getParameter("custName");
						 }
						 if(request.getParameter("otherMine") != null && !request.getParameter("otherMine").equals("")){
							 otherMine = request.getParameter("otherMine"); 
						 }
						 if(request.getParameter("rentPaid") != null && !request.getParameter("rentPaid").equals("")){ 
							 rentPaid = Float.parseFloat(request.getParameter("rentPaid"));
						 }
						 if(request.getParameter("rayaltyPaid") != null && !request.getParameter("rayaltyPaid").equals("")){
							 royaltyPaid = Float.parseFloat(request.getParameter("rayaltyPaid"));
						 }
						 if(request.getParameter("deadRent") != null && !request.getParameter("deadRent").equals("")){
							 deadRent = Float.parseFloat(request.getParameter("deadRent"));
						 }
						 if(request.getParameter("challanDetailsOne") != null && !request.getParameter("challanDetailsOne").equals("")){
							 challanDetails1 = Float.parseFloat(request.getParameter("challanDetailsOne"));
						 }
						 if(request.getParameter("challanDetailsTwo") != null && !request.getParameter("challanDetailsTwo").equals("")){
							 challanDetails2 = Float.parseFloat(request.getParameter("challanDetailsTwo"));
						 }
						 if(request.getParameter("mineWorkedId") != null && !request.getParameter("mineWorkedId").equals("")){
							 mineWorked = Integer.parseInt(request.getParameter("mineWorkedId"));
						 }
						 if(request.getParameter("wrokStopped") != null && !request.getParameter("wrokStopped").equals("")){
							 workStopped = Integer.parseInt(request.getParameter("wrokStopped"));
						 }
						 if(request.getParameter("stoppedReason") != null && !request.getParameter("stoppedReason").equals("")){
							 stoppedReason = request.getParameter("stoppedReason");
						 }
						 if(request.getParameter("technicalStaff") != null && !request.getParameter("technicalStaff").equals("")){
							 technicalStaff = Integer.parseInt(request.getParameter("technicalStaff"));
						 }
						 if(request.getParameter("totalSalary") != null && !request.getParameter("totalSalary").equals("")){
							 totalSalary = Float.parseFloat(request.getParameter("totalSalary"));
						 }
						 String jsondata = request.getParameter("jsondata");
						 String challanJson=request.getParameter("challanJson");
						 
						 JSONArray cjson = null;
						 JSONArray json = null;
						 
						 if (jsondata != null && (!jsondata.equals(""))){
							String jsn = "[" + jsondata + "]";
							try {
								json = new JSONArray(jsn.toString());
							} catch (JSONException e){
								e.printStackTrace();
							}
						 }else{
							 json = new JSONArray();
						 }
						 if (challanJson != null && (!challanJson.equals(""))){
								String jsn1 = "[" + challanJson + "]";
								try {
									cjson = new JSONArray(jsn1.toString());
								} catch (JSONException e){
									e.printStackTrace();
								}
							 }else{
								 cjson = new JSONArray();
							 }
						 if(generatedkey == 0){
							 autoGeneratedKeys = ironMiningFunction.saveGeneralAndLabourInformation(custName,date,region,pin,regNo,mineCode,mineralsName,tcNoId,mineId,otherMine,nameAndAddress,rentPaid,royaltyPaid,deadRent,challanDetails1,challanDetails2,mineWorked,workStopped,stoppedReason,technicalStaff,totalSalary,systemId,custId,userId,json,otherStoppedReason,cjson);
						 }else if(generatedkey>0){
							 autoGeneratedKeys = ironMiningFunction.updateGeneralAndLabourInformation(generatedkey,custName,date,region,pin,regNo,mineCode,mineralsName,tcNoId,mineId,otherMine,nameAndAddress,rentPaid,royaltyPaid,deadRent,challanDetails1,challanDetails2,mineWorked,workStopped,stoppedReason,technicalStaff,totalSalary,systemId,custId,userId,json,otherStoppedReason,cjson);
						 }
				         response.getWriter().print(autoGeneratedKeys);
				        } catch (Exception e) {
				            e.printStackTrace();
				        }
				    }else if (param.equalsIgnoreCase("insertFormOnePartTwo")) {
						 try {
							 String typeOfOre="";
							 int autoGeneratedKeys = 0;
							 if(request.getParameter("autoGeneratedId") != null && !request.getParameter("autoGeneratedId").equals("")){
								 autoGeneratedKeys = Integer.parseInt(request.getParameter("autoGeneratedId"));
							 }
							 if(request.getParameter("oreType") != null && !request.getParameter("oreType").equals("")){
								 typeOfOre = request.getParameter("oreType");
							 }
							 String jsondata = request.getParameter("JSONOreProductionData");
							 String JSONGradeWiseProductionData = request.getParameter("JSONGradeWiseProductionData");
							 String JSONDetailsOfDeductionData = request.getParameter("JSONDetailsOfDeductionData");
							 String JSONSaleDespatchData = request.getParameter("JSONSaleDespatchData");
							 JSONArray json = null;
							 JSONArray json1 = null;
							 JSONArray json2 = null;
							 JSONArray json3 = null;
							 if (jsondata != null && (!jsondata.equals(""))){
								 String jsn = "[" + jsondata + "]";
								 try {
									 json = new JSONArray(jsn.toString());
								} catch (Exception e) {
									e.printStackTrace();
								}
							 }else{
								 json = new JSONArray();
							 }
							 if (JSONGradeWiseProductionData !=null && (!JSONGradeWiseProductionData.equals(""))){
								 String jsn1 = "[" + JSONGradeWiseProductionData + "]";
								 try {
									 json1 = new JSONArray(jsn1.toString());
								} catch (Exception e) {
									e.printStackTrace();
								}
							 }else{
								 json1 = new JSONArray();
							 }
							 if (JSONDetailsOfDeductionData != null && (!JSONDetailsOfDeductionData.equals(""))){
								 String jsn2 = "[" + JSONDetailsOfDeductionData + "]";
								 try {
									 json2 = new JSONArray(jsn2.toString());
								} catch (Exception e) {
									e.printStackTrace();
								}
							 }else{
								 json2 = new JSONArray();
							 }
							 if (JSONSaleDespatchData != null && (!JSONSaleDespatchData.equals(""))){
								String jsn3 = "[" + JSONSaleDespatchData + "]";
								try {
									json3 = new JSONArray(jsn3.toString());
									
								} catch (JSONException e){
									e.printStackTrace();
								}
							 }else{
								 json3 = new JSONArray();
							 }
					        	 message = ironMiningFunction.saveFormOnePartTwoInformation(autoGeneratedKeys,typeOfOre,json,json1,json2,json3);
					             response.getWriter().print(message);
					        } catch (Exception e) { 
					            e.printStackTrace();
					        }
					    }else if (param.equalsIgnoreCase("insertFormOnePartThree")) {
							 try {
								 int autoGeneratedKeys = 0;	
								 String production = "";
								 String gradewise = "";
								 String remarks = "";
								 if(request.getParameter("autoGeneratedId") != null && !request.getParameter("autoGeneratedId").equals("")){
									 autoGeneratedKeys = Integer.parseInt(request.getParameter("autoGeneratedId"));
								 }
								 if(request.getParameter("production") != null && !request.getParameter("production").equals("")){
									 production = request.getParameter("production");
								 }
								 if(request.getParameter("gradewise") != null && !request.getParameter("gradewise").equals("")){
									 gradewise = request.getParameter("gradewise");
								 }
								 if(request.getParameter("remarks") != null && !request.getParameter("remarks").equals("")){
									 remarks=request.getParameter("remarks");
								 }								 
								 String place = request.getParameter("place");
								 String date = request.getParameter("date");
								 date = date.replace('T', ' ');
								 String name = request.getParameter("name");
								 String designation = request.getParameter("designation");
								 message = ironMiningFunction.saveFormOnePartThreeInformation(autoGeneratedKeys,production,gradewise,remarks,place,date,name,designation);
						         response.getWriter().print(message);									
						        } catch (Exception e) {
						            e.printStackTrace();
						        }
						    }else if (param.equalsIgnoreCase("getMonthlyReturnsDashboardDetails")) {
								jsonObject = new JSONObject();
								jsonArray = new JSONArray();
								String jspName = "";
								String userAuthority="";
								String type = "";
								try {
									jspName = request.getParameter("jspName");
									if(request.getParameter("userAuthority") != null && !request.getParameter("userAuthority").equals("")){
										userAuthority = request.getParameter("userAuthority");
									}
									if(request.getParameter("custId") != null && !request.getParameter("custId").equals("")){
										custId = Integer.parseInt(request.getParameter("custId"));
									}
									if(request.getParameter("type") != null && !request.getParameter("type").equals("")){
										type = request.getParameter("type");
									}
									ArrayList < Object > list = ironMiningFunction.getMonthlyReturnsDashboardDetails(systemId,custId,userId,userAuthority,lang,type);
									jsonArray = (JSONArray) list.get(0);
									if (jsonArray.length() > 0) {
										jsonObject.put("monthlyReturnFormDetailsRoot", jsonArray);
									} else {
										jsonObject.put("monthlyReturnFormDetailsRoot", "");
									}
									ReportHelper reportHelper = (ReportHelper) list.get(1);
									request.getSession().setAttribute(jspName, reportHelper);
					                request.getSession().setAttribute("custId", cf.getCustomerName(String.valueOf(custId), systemId));
									response.getWriter().print(jsonObject.toString());
								} catch (Exception e) {
									e.printStackTrace();
								}
							}else if (param.equalsIgnoreCase("getDashboardCount")) {
								jsonObject = new JSONObject();
								jsonArray = new JSONArray();
								String userAuthority = "";
								int customersId = 0;
								try {
									if(request.getParameter("userAuthority") != null && !request.getParameter("userAuthority").equals("")){
										userAuthority = request.getParameter("userAuthority");
									}
									if(request.getParameter("custId") != null && !request.getParameter("custId").equals("")){
										customersId = Integer.parseInt(request.getParameter("custId"));
									}
									jsonArray = ironMiningFunction.getDashboardCount(userAuthority,systemId,customersId,userId);
									if (jsonArray.length() > 0) {
										jsonObject.put("dashboardCountRoot", jsonArray);
									} else {
										jsonObject.put("dashboardCountRoot", "");
									}						
									response.getWriter().print(jsonObject.toString());
								} catch (Exception e) { 
									e.printStackTrace();
								}
							}
						    else if (param.equalsIgnoreCase("saveRemarks")) {
						        try {
						            String id = request.getParameter("id");
						            String buttonValue = request.getParameter("buttonValue");
						            String remarks=request.getParameter("remarks");
						            String message1="";
						                message1 = ironMiningFunction.updateRemarks(Integer.parseInt(id),remarks,buttonValue,userId);
						            response.getWriter().print(message1);
						        } catch (Exception e) {
						            e.printStackTrace();
						        }
						    }
						   
						    else if (param.equalsIgnoreCase("getCountry")) {
								jsonObject = new JSONObject();
								jsonArray = new JSONArray();
								try {
									jsonArray =cf.getCountry();
									if (jsonArray.length() > 0) {
										jsonObject.put("countryRoot", jsonArray);
									} else {
										jsonObject.put("countryRoot", "");
									}
									response.getWriter().print(jsonObject.toString());
								} catch (Exception e) {
									e.printStackTrace();
								}
							}
						    else if (param.equalsIgnoreCase("getGradeForChallan")) {
								jsonObject = new JSONObject();
								jsonArray = new JSONArray();
								
								try {
									String mineralName = "";
									if(request.getParameter("typeOfOre") != null && !request.getParameter("typeOfOre").equals("")){
										mineralName = request.getParameter("typeOfOre");
									}
									jsonArray = ironMiningFunction.getGradeWiseProductionDespatchList(mineralName,"Grades");
									if (jsonArray.length() > 0) {
										jsonObject.put("gradeStoreRoot", jsonArray);
									} else {
										jsonObject.put("gradeStoreRoot", "");
									}
									response.getWriter().print(jsonObject.toString());
								} catch (Exception e) {
									e.printStackTrace();
								}
							}
/********************************************************Modify Monthly Return Forms*************************************************************************************************/	
						    else if (param.equalsIgnoreCase("getDetailsAndLocationOfMine")) {
						    	jsonObject = new JSONObject();
								jsonArray = new JSONArray();
								try {	
									int monthlyId = 0;
									if(request.getParameter("monthlyId") != null && !request.getParameter("monthlyId").equals("")){
										monthlyId = Integer.parseInt(request.getParameter("monthlyId")); 
									}
									jsonArray = ironMiningFunction.getDetailsAndLocationOfMine(monthlyId);
									if (jsonArray.length() > 0) {
										jsonObject.put("detailsAndLocationOfMineRoot", jsonArray);
									} else {
										jsonObject.put("detailsAndLocationOfMineRoot", "");
									}
									response.getWriter().print(jsonObject.toString());
								} catch (Exception e) { 
									e.printStackTrace();
								}
						    }else if (param.equalsIgnoreCase("getNameAddressOfLesseeOwner")) {
						    	jsonObject = new JSONObject();
								jsonArray = new JSONArray();
								try {	
									int monthlyId = 0;
									int custsId = 0;
									if(request.getParameter("custId") != null && !request.getParameter("custId").equals("")){
										custsId = Integer.parseInt(request.getParameter("custId")); 
									}
									if(request.getParameter("monthlyId") != null && !request.getParameter("monthlyId").equals("")){
										monthlyId = Integer.parseInt(request.getParameter("monthlyId")); 
									}
									jsonArray = ironMiningFunction.getNameAddressOfLesseeOwner(systemId,custsId,monthlyId);
									if (jsonArray.length() > 0) {
										jsonObject.put("NameAddressOfLesseeOwnerRoot", jsonArray);
									} else {
										jsonObject.put("NameAddressOfLesseeOwnerRoot", "");
									}
									response.getWriter().print(jsonObject.toString());
								} catch (Exception e) { 
									e.printStackTrace();
								}
						    }else if (param.equalsIgnoreCase("getDailyEmploymentDetails")) {
						    	jsonObject = new JSONObject();
								jsonArray = new JSONArray();
								try {	
									int autoGeneratedId = 0;
									if(request.getParameter("autoGeneratedId") != null && !request.getParameter("autoGeneratedId").equals("")){
										autoGeneratedId = Integer.parseInt(request.getParameter("autoGeneratedId"));
									}
									jsonArray = ironMiningFunction.getDailyEmploymentDetails(autoGeneratedId);
									if (jsonArray.length() > 0) {
										jsonObject.put("employmentRoot", jsonArray);
									} else {
										jsonObject.put("employmentRoot", "");
									}
									response.getWriter().print(jsonObject.toString());
								} catch (Exception e) { 
									e.printStackTrace();
								}
						    }else if (param.equalsIgnoreCase("getChallanDetails")) {
						    	jsonObject = new JSONObject();
								jsonArray = new JSONArray();
								try {	
									int autoGeneratedId = 0;
									if(request.getParameter("custId") != null && !request.getParameter("custId").equals("")){
										custId = Integer.parseInt(request.getParameter("custId"));
									}
									if(request.getParameter("autoGeneratedId") != null && !request.getParameter("autoGeneratedId").equals("")){
										autoGeneratedId = Integer.parseInt(request.getParameter("autoGeneratedId"));
									}
									jsonArray = ironMiningFunction.getChallanDetailsForMonthlyReturns(autoGeneratedId);
									if (jsonArray.length() > 0) {
										jsonObject.put("challanRoot", jsonArray);
									} else {
										jsonObject.put("challanRoot", "");
									}
									response.getWriter().print(jsonObject.toString());
								} catch (Exception e) { 
									e.printStackTrace();
								}
						    }else if (param.equalsIgnoreCase("getTypesOfOreStore")) {
						    	jsonObject = new JSONObject();
								jsonArray = new JSONArray();
								try {	
									int autoGeneratedId = 0;
									if(request.getParameter("autoGeneratedId") != null && !request.getParameter("autoGeneratedId").equals("")){
										autoGeneratedId = Integer.parseInt(request.getParameter("autoGeneratedId"));
									}
									jsonArray = ironMiningFunction.getTypesOfOreStore(autoGeneratedId);
									if (jsonArray.length() > 0) {
										jsonObject.put("typesOfOreStoreRoot", jsonArray);
									} else {
										jsonObject.put("typesOfOreStoreRoot", "");
									}
									response.getWriter().print(jsonObject.toString());
								} catch (Exception e) { 
									e.printStackTrace();
								}
						    }else if (param.equalsIgnoreCase("getSalesDespatchList")) {
						    	jsonObject = new JSONObject();
								jsonArray = new JSONArray();
								try {	
									int autoGeneratedId = 0;
									if(request.getParameter("autoGeneratedId") != null && !request.getParameter("autoGeneratedId").equals("")){
										autoGeneratedId = Integer.parseInt(request.getParameter("autoGeneratedId"));
									}
									jsonArray = ironMiningFunction.getSalesDespatchList(autoGeneratedId);
									if (jsonArray.length() > 0) {
										jsonObject.put("salesDespatchRoot", jsonArray);
									} else {
										jsonObject.put("salesDespatchRoot", "");
									}
									response.getWriter().print(jsonObject.toString());
								} catch (Exception e) { 
									e.printStackTrace();
								}
						    }else if (param.equalsIgnoreCase("getFormThreeDetails")) {
						    	jsonObject = new JSONObject();
								jsonArray = new JSONArray();
								try {	
									int autoGeneratedId = 0;
									if(request.getParameter("autoGeneratedId") != null && !request.getParameter("autoGeneratedId").equals("")){
										autoGeneratedId = Integer.parseInt(request.getParameter("autoGeneratedId"));
									}
									jsonArray = ironMiningFunction.getFormThreeDetails(autoGeneratedId);
									if (jsonArray.length() > 0) {
										jsonObject.put("formThreeDetailsRoot", jsonArray);
									} else {
										jsonObject.put("formThreeDetailsRoot", "");
									}
									response.getWriter().print(jsonObject.toString());
								} catch (Exception e) { 
									e.printStackTrace();
								}
						    }else if (param.equalsIgnoreCase("finalSubmission")) {
								 try {
									 int monthlyFormId=0;
									 if(request.getParameter("monthlyFormId") != null && !request.getParameter("monthlyFormId").equals("")){
										monthlyFormId = Integer.parseInt(request.getParameter("monthlyFormId"));
									 }
									 message = ironMiningFunction.finalSubmission(monthlyFormId);
						             response.getWriter().print(message);
							        } catch (Exception e) { 
							            e.printStackTrace();
							        }
							    }		
						    else if (param.equalsIgnoreCase("getROMProcessingDetails")) {
								jsonObject = new JSONObject();
								jsonArray = new JSONArray();
								int autoGeneratedId = 0;
								if(request.getParameter("autoGeneratedId") != null && !request.getParameter("autoGeneratedId").equals("")){
									autoGeneratedId = Integer.parseInt(request.getParameter("autoGeneratedId"));
								}
								try {
									jsonArray = ironMiningFunction.getROMProcessingDetails(autoGeneratedId);
									if (jsonArray.length() > 0) {
										jsonObject.put("romProcessingRoot", jsonArray);
									} else {
										jsonObject.put("romProcessingRoot", "");
									}
									response.getWriter().print(jsonObject.toString());
								} catch (Exception e) {
									e.printStackTrace();
								}
							}
						    else if (param.equalsIgnoreCase("getOversizeDetails")) {
								jsonObject = new JSONObject();
								jsonArray = new JSONArray();
								int autoGeneratedId = 0;
								if(request.getParameter("autoGeneratedId") != null && !request.getParameter("autoGeneratedId").equals("")){
									autoGeneratedId = Integer.parseInt(request.getParameter("autoGeneratedId"));
								}
								try {
									jsonArray = ironMiningFunction.getOversizeDetails(autoGeneratedId);
									if (jsonArray.length() > 0) {
										jsonObject.put("oversizeRoot", jsonArray);
									} else {
										jsonObject.put("oversizeRoot", "");
									}
									response.getWriter().print(jsonObject.toString());
								} catch (Exception e) {
									e.printStackTrace();
								}
							}
						    else if (param.equalsIgnoreCase("getOreProcessedDetails")) {
								jsonObject = new JSONObject();
								jsonArray = new JSONArray();
								int autoGeneratedId = 0;
								if(request.getParameter("autoGeneratedId") != null && !request.getParameter("autoGeneratedId").equals("")){
									autoGeneratedId = Integer.parseInt(request.getParameter("autoGeneratedId"));
								}
								String mineralName="";
								if(request.getParameter("typeOfOre") != null && !request.getParameter("typeOfOre").equals("")){
									mineralName = request.getParameter("typeOfOre");
								}
								try {
									jsonArray = ironMiningFunction.getOreProcessedDetails(autoGeneratedId,mineralName);
									if (jsonArray.length() > 0) {
										jsonObject.put("processedOreRoot", jsonArray);
									} else {
										jsonObject.put("processedOreRoot", "");
									}
									response.getWriter().print(jsonObject.toString());
								} catch (Exception e) {
									e.printStackTrace();
								}
							}else if (param.equalsIgnoreCase("getOversizeProcessingDeatils")) {
								jsonObject = new JSONObject();
								jsonArray = new JSONArray();
								int autoGeneratedId = 0;
								if(request.getParameter("autoGeneratedId") != null && !request.getParameter("autoGeneratedId").equals("")){
									autoGeneratedId = Integer.parseInt(request.getParameter("autoGeneratedId"));
								}
								String mineralName="";
								if(request.getParameter("typeOfOre") != null && !request.getParameter("typeOfOre").equals("")){
									mineralName = request.getParameter("typeOfOre");
								}
								try {
									jsonArray = ironMiningFunction.getOversizeProcessingDeatils(autoGeneratedId,mineralName);
									if (jsonArray.length() > 0) {
										jsonObject.put("oversizeProcessingRoot", jsonArray);
									} else {
										jsonObject.put("oversizeProcessingRoot", "");
									}
									response.getWriter().print(jsonObject.toString());
								} catch (Exception e) {
									e.printStackTrace();
								}
							}
							else if (param.equalsIgnoreCase("getProductionDetails")) {
								jsonObject = new JSONObject();
								jsonArray = new JSONArray();
								int autoGeneratedId = 0;
								if(request.getParameter("autoGeneratedId") != null && !request.getParameter("autoGeneratedId").equals("")){
									autoGeneratedId = Integer.parseInt(request.getParameter("autoGeneratedId"));
								}
								String mineralName="";
								if(request.getParameter("typeOfOre") != null && !request.getParameter("typeOfOre").equals("")){
									mineralName = request.getParameter("typeOfOre");
								}
								try {
									jsonArray = ironMiningFunction.getProductionDetails(autoGeneratedId,mineralName);
									if (jsonArray.length() > 0) {
										jsonObject.put("productGeneratedRoot", jsonArray);
									} else {
										jsonObject.put("productGeneratedRoot", "");
									}
									response.getWriter().print(jsonObject.toString());
								} catch (Exception e) {
									e.printStackTrace();
								}
							}
							else if (param.equalsIgnoreCase("insertFormOnePartFour")) {
								 try {
									 String mineralName="";
									 int autoGeneratedId = 0;
									 if(request.getParameter("typeOfOre") != null && !request.getParameter("typeOfOre").equals("")){
											mineralName = request.getParameter("typeOfOre");
										}
										if(request.getParameter("autoGeneratedKeys") != null && !request.getParameter("autoGeneratedKeys").equals("")){
											autoGeneratedId = Integer.parseInt(request.getParameter("autoGeneratedKeys"));
										}
									 String JSONRomProcessingData = request.getParameter("JSONRomProcessingData");
									 String JSONOreProcessingData = request.getParameter("JSONOreProcessingData");
									 String JSONOversizeData = request.getParameter("JSONOversizeData");
									 String JSONOversizeProcessingData = request.getParameter("JSONOversizeProcessingData");
									 String JSONProductGeneratedData = request.getParameter("JSONProductGeneratedData");
									 JSONArray json = null;
									 JSONArray json1 = null;
									 JSONArray json2 = null;
									 JSONArray json3 = null;
									 JSONArray json4 = null;
									 if (JSONRomProcessingData != null && (!JSONRomProcessingData.equals(""))){
										 String jsn = "[" + JSONRomProcessingData + "]";
										 try {
											 json = new JSONArray(jsn.toString());
										} catch (Exception e) {
											e.printStackTrace();
										}
									 }else{
										 json = new JSONArray();
									 }
									 if (JSONOreProcessingData !=null && (!JSONOreProcessingData.equals(""))){
										 String jsn1 = "[" + JSONOreProcessingData + "]";
										 try {
											 json1 = new JSONArray(jsn1.toString());
										} catch (Exception e) {
											e.printStackTrace();
										}
									 }else{
										 json1 = new JSONArray();
									 }
									 if (JSONOversizeData != null && (!JSONOversizeData.equals(""))){
										 String jsn2 = "[" + JSONOversizeData + "]";
										 try {
											 json2 = new JSONArray(jsn2.toString());
										} catch (Exception e) {
											e.printStackTrace();
										}
									 }else{
										 json2 = new JSONArray();
									 }
									 if (JSONOversizeProcessingData != null && (!JSONOversizeProcessingData.equals(""))){
										String jsn3 = "[" + JSONOversizeProcessingData + "]";
										try {
											json3 = new JSONArray(jsn3.toString());
											
										} catch (JSONException e){
											e.printStackTrace();
										}
									 }else{
										 json3 = new JSONArray();
									 }
									 if (JSONProductGeneratedData != null && (!JSONProductGeneratedData.equals(""))){
											String jsn4 = "[" + JSONProductGeneratedData + "]";
											try {
												json4 = new JSONArray(jsn4.toString());
												
											} catch (JSONException e){
												e.printStackTrace();
											}
										 }else{
											 json4 = new JSONArray();
										 }
							        	 message = ironMiningFunction.saveFormOnePartFourInformation(autoGeneratedId,mineralName,json,json1,json2,json3,json4);
							             response.getWriter().print(message);
							        } catch (Exception e) { 
							            e.printStackTrace();
							        }
							    }
						    else if (param.equalsIgnoreCase("getGrades")) {
								jsonObject = new JSONObject();
								jsonArray = new JSONArray();
								try {
									String mineralName = "";
									if(request.getParameter("typeOfOre") != null && !request.getParameter("typeOfOre").equals("")){
										mineralName = request.getParameter("typeOfOre");
									}
									jsonArray = ironMiningFunction.getGradeWiseProductionDespatchList(mineralName,"Dispatch");
									if (jsonArray.length() > 0) {
										jsonObject.put("gradeRoot", jsonArray);
									} else {
										jsonObject.put("gradeRoot", "");
									}
									response.getWriter().print(jsonObject.toString());
								} catch (Exception e) {
									e.printStackTrace();
								}
							}

			} else {
				if (request.getParameter("param").equals("checkSession")) {
					response.getWriter().print("InvalidSession");
				}
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		return null;
	}
}
