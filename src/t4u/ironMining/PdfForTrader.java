package t4u.ironMining;

import java.awt.Color;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.HashMap;
import java.util.Properties;

import javax.servlet.ServletException;
import javax.servlet.ServletOutputStream;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import t4u.common.ApplicationListener;
import t4u.common.DBConnection;

import com.lowagie.text.Document;
import com.lowagie.text.Font;
import com.lowagie.text.Image;
import com.lowagie.text.PageSize;
import com.lowagie.text.Phrase;
import com.lowagie.text.Rectangle;
import com.lowagie.text.pdf.BaseFont;
import com.lowagie.text.pdf.PdfContentByte;
import com.lowagie.text.pdf.PdfPCell;
import com.lowagie.text.pdf.PdfPTable;
import com.lowagie.text.pdf.PdfWriter;

@SuppressWarnings("serial")
public class PdfForTrader extends HttpServlet {
	static BaseFont baseFont = null;
	static int font=10;
	public String GET_TRADER_DETAILS = " select isnull(TYPE,'')as TYPE,ID,isnull(IBM_APPLICATION_NO,'')as IBM_APPLICATION_NO,isnull(APPLICATION_DATE,'') as APPLICATION_DATE,isnull(IBM_TRADER_NO,'')as IBM_TRADER_NO, " +
									   " isnull(ORGANIZATION_NAME,'')as ORGANIZATION_NAME,isnull(ADDRESS,'') as ADDRESS,isnull(PAN_NO,'') as PAN_NO,isnull(IEC_NUMBER,'')as IEC_NUMBER,isnull(TIN_NO,'')as TIN_NO,isnull(ORGANIZATION_CODE,'')as ORGANIZATION_CODE, " +
									   " isnull(INSERTED_DATETIME,'') as DATE_OF_ISSUE " +
									   " from AMS.dbo.MINING_ORGANIZATION_MASTER where ID=? ";
	
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException
    {	
		try
		{
			ServletOutputStream servletOutputStream = response.getOutputStream();
			Properties properties = ApplicationListener.prop;
			String billpath=  properties.getProperty("Builtypath");
			refreshdir(billpath);
			String pdfFileName="CertificateOfRegistration";
			String fontPath = properties.getProperty("FontPathForMaplePDF");
			baseFont = BaseFont.createFont(fontPath, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);
			String bill = billpath+ pdfFileName + ".pdf";

			FileOutputStream fileOut = new FileOutputStream(bill);
			Document document = new Document(PageSize.A4, 50, 50, 80, 50);
			PdfWriter writer = PdfWriter.getInstance(document,fileOut);
			
			document.open();
			PdfContentByte canvas = writer.getDirectContent();
	        Rectangle rect = document.getPageSize();
	        
	        rect.setBorder(Rectangle.BOX); // left, right, top, bottom border
	        rect.setBorderWidth(5); // a width of 5 user units
	        rect.setUseVariableBorders(true); // the full width will be visible
	        canvas.rectangle(rect);
	        
	        Rectangle rect1 = new Rectangle(36, 36, 559, 806);
	        rect1.setBorder(Rectangle.BOX);
	        rect1.setBorderWidth(2);
	        canvas.rectangle(rect1);
			
			generateBill(document,Integer.parseInt(request.getParameter("autoGeneratedKeys")));
			document.close();
			printBill(servletOutputStream, response, bill, pdfFileName);
		}
		catch (Exception e) 
		{
			System.out.println("Error generating pdf form : " + e);
			e.printStackTrace();
		}
	}
	
	@SuppressWarnings("unchecked")
	private void generateBill(Document document,int id) 
	{		
		try
		{			
			
			HashMap traderDetails=new HashMap();
			traderDetails=getTraderDetails(id);
			
			String certType=(String) traderDetails.get("certType");
			String regNo=(String) traderDetails.get("regNo");
			String dated=(String) traderDetails.get("issuedDate");
			String name=(String) traderDetails.get("nameOfTrader");
			String panNo=(String) traderDetails.get("panNo");
			String address=(String) traderDetails.get("address");
			String certificateNo=(String) traderDetails.get("certificateNo");
			
			PdfPTable image = createImage();
			document.add(image);
			
			PdfPTable logoHeader = createLogoHeader();
			document.add(logoHeader);
			
			PdfPTable header =createTableForHeadings();
			document.add(header);
			
			PdfPTable dec =createForDeclaration(name,certType);
			document.add(dec);
			
			PdfPTable details =createTableForTraderDetails(regNo,dated,name,panNo,address,certificateNo);
			document.add(details);
			
			PdfPTable last=createLine();
			document.add(last);
			
			PdfPTable footer=createFooter();
			document.add(footer);
			
			document.close();
			
		}catch (Exception e) 
		{
			System.out.println("Error generating report : " + e);
			e.printStackTrace();
		}
	}	
	
	 private PdfPTable createImage () {

			float[] width = {23};
			PdfPTable maintable = new PdfPTable(1);
			
			try {
				
				String path = getServletContext().getRealPath("/")+"Main/modules/ironMining/images/dmgLogo.png";
				Image img2 = Image.getInstance(path);
				
				maintable.setWidthPercentage(23);
				maintable.setWidths(width);
				
				Phrase myPhrase=new Phrase("",new Font(baseFont, 1, Font.NORMAL));
				PdfPCell ci2 = new PdfPCell(myPhrase);
				ci2.setBackgroundColor(Color.WHITE);
				ci2.setBorder(Rectangle.NO_BORDER);
				maintable.addCell(ci2);
				
				myPhrase=new Phrase("",new Font(baseFont, 1, Font.NORMAL));
				PdfPCell ci = new PdfPCell(myPhrase);
				ci.setBackgroundColor(Color.WHITE);
				ci.setHorizontalAlignment(Rectangle.ALIGN_CENTER);
				ci.addElement(img2);
				ci.setBorder(Rectangle.NO_BORDER);
				ci.disableBorderSide(Rectangle.TOP);
				maintable.addCell(ci);
			    
			} catch (Exception e) {
				e.printStackTrace();
			}
			return maintable;
		}
	 
	 private PdfPTable createLogoHeader () {

			float[] width = {100};
			PdfPTable maintable = new PdfPTable(1);
			
			try {
				
				maintable.setWidthPercentage(100);
				maintable.setWidths(width);
				Phrase myPhrase=null;
				
				myPhrase=new Phrase("Government of Goa",new Font(baseFont,11, Font.NORMAL));
			    PdfPCell cb = new PdfPCell(myPhrase);
			    cb.setBorder(Rectangle.NO_BORDER);
			    cb.setHorizontalAlignment(Rectangle.ALIGN_CENTER);
			    cb.setBackgroundColor(Color.WHITE);
			    maintable.addCell(cb);
			    
			    myPhrase=new Phrase("Directorate of Mines & Geology",new Font(baseFont,13, Font.NORMAL));
			    PdfPCell cc = new PdfPCell(myPhrase);
			    cc.setBorder(Rectangle.NO_BORDER);
			    cc.setHorizontalAlignment(Rectangle.ALIGN_CENTER);
			    cc.setBackgroundColor(Color.WHITE);
			    maintable.addCell(cc);
			    
			    myPhrase=new Phrase("Ground Floor, Institute of Menezes Braganza, Panaji, Goa",new Font(baseFont,11, Font.NORMAL));
			    PdfPCell cb12 = new PdfPCell(myPhrase);
			    cb12.setBorder(Rectangle.NO_BORDER);
			    cb12.setHorizontalAlignment(Rectangle.ALIGN_CENTER);
			    cb12.setBackgroundColor(Color.WHITE);
			    maintable.addCell(cb12);
			    
				myPhrase=new Phrase(" ",new Font(baseFont,11, Font.NORMAL));
			    PdfPCell cb1 = new PdfPCell(myPhrase);
			    cb1.setBorder(Rectangle.NO_BORDER);
			    cb1.setHorizontalAlignment(Rectangle.ALIGN_CENTER);
			    cb1.setBackgroundColor(Color.WHITE);
			    maintable.addCell(cb1);
			    
			    myPhrase=new Phrase(" ",new Font(baseFont,13, Font.NORMAL));
			    PdfPCell cc1 = new PdfPCell(myPhrase);
			    cc1.setBorder(Rectangle.NO_BORDER);
			    cc1.setHorizontalAlignment(Rectangle.ALIGN_CENTER);
			    cc1.setBackgroundColor(Color.WHITE);
			    maintable.addCell(cc1);
			    
			    myPhrase=new Phrase("CERTIFICATE OF REGISTRATION",new Font(baseFont,13, Font.UNDERLINE));
			    PdfPCell c = new PdfPCell(myPhrase);
			    c.setBorder(Rectangle.NO_BORDER);
			    c.setHorizontalAlignment(Rectangle.ALIGN_CENTER);
			    c.setBackgroundColor(Color.WHITE);
			    maintable.addCell(c);
			    
			    myPhrase=new Phrase(" ",new Font(baseFont,12, Font.NORMAL));
			    PdfPCell c1 = new PdfPCell(myPhrase);
			    c1.setHorizontalAlignment(Rectangle.ALIGN_CENTER);
			    c1.setBackgroundColor(Color.WHITE);
			    c1.setBorder(Rectangle.NO_BORDER);
			    maintable.addCell(c1);
			    
			} catch (Exception e) {
				e.printStackTrace();
			}
			return maintable;
		}
	 
	 private PdfPTable createTableForHeadings()
		{
			float[] widths = {70,20,50};
			PdfPTable t = new PdfPTable(3);
			
			try
			{
				t.setWidthPercentage(100);
				t.setWidths(widths);
				
				Phrase myPhrase1=new Phrase("Reference Number : ",new Font(baseFont,font, Font.NORMAL));
				PdfPCell c = new PdfPCell(myPhrase1);
				c.setBackgroundColor(Color.WHITE);
				c.setBorder(Rectangle.NO_BORDER);
				t.addCell(c);
				
				Phrase myPhrase=new Phrase("",new Font(baseFont,font, Font.NORMAL));
				PdfPCell c1 = new PdfPCell(myPhrase);
				c1.setBorder(Rectangle.NO_BORDER);
				c1.setBackgroundColor(Color.WHITE);
				t.addCell(c1);
				
				myPhrase1=new Phrase("        Date : ",new Font(baseFont,font, Font.NORMAL));
				PdfPCell c2 = new PdfPCell(myPhrase1);
				c2.setBorder(Rectangle.NO_BORDER);
				c2.setBackgroundColor(Color.WHITE);
				t.addCell(c2);
				
				myPhrase=new Phrase(" ",new Font(baseFont,9, Font.NORMAL));
				PdfPCell cs = new PdfPCell(myPhrase);
				cs.disableBorderSide(Rectangle.LEFT);
				cs.disableBorderSide(Rectangle.RIGHT);
				cs.disableBorderSide(Rectangle.TOP);
				cs.setBackgroundColor(Color.WHITE);
				t.addCell(cs);
				
				myPhrase=new Phrase(" ",new Font(baseFont,9, Font.NORMAL));
				PdfPCell cs1 = new PdfPCell(myPhrase);
				cs1.disableBorderSide(Rectangle.LEFT);
				cs1.disableBorderSide(Rectangle.RIGHT);
				cs1.disableBorderSide(Rectangle.TOP);
				cs1.setBackgroundColor(Color.WHITE);
				t.addCell(cs1);
				
				myPhrase=new Phrase(" ",new Font(baseFont,9, Font.NORMAL));
				PdfPCell cs2 = new PdfPCell(myPhrase);
				cs2.disableBorderSide(Rectangle.LEFT);
				cs2.disableBorderSide(Rectangle.RIGHT);
				cs2.disableBorderSide(Rectangle.TOP);
				cs2.setBackgroundColor(Color.WHITE);
				t.addCell(cs2);

			}
			catch (Exception e) 
			{
				System.out.println("Error creating PDF form for Trader :  " + e);
				e.printStackTrace();
			}
			return t;	
		}
	 
	 private PdfPTable createForDeclaration(String name,String certType)
		{
			float[] widths = {100};
			PdfPTable t = new PdfPTable(1);
			
			try
			{
				//name=name.length()>0?name:"________";
				t.setWidthPercentage(100);
				t.setWidths(widths);
				Phrase myPhrase=new Phrase("This is to certify that '"+name+"' has been registered as a " +certType+
										   " under Rule 5 of the Goa (Prevention of Illegal Mining, Storage and Transportation of Minerals) " +
										   " Rules 2013 to undertake mining operations and other such activities on behalf of the lease holder " +
										   " within the State of Goa.",new Font(baseFont,font, Font.NORMAL));
			    PdfPCell c7 = new PdfPCell(myPhrase);
			    c7.setBorder(Rectangle.NO_BORDER);
			    c7.setHorizontalAlignment(Rectangle.ALIGN_LEFT);
			    c7.setBackgroundColor(Color.WHITE);
			    t.addCell(c7);
				
			    myPhrase=new Phrase(" ",new Font(baseFont, 12, Font.NORMAL));
				PdfPCell c33 = new PdfPCell(myPhrase);
				c33.setBorder(Rectangle.NO_BORDER);
				c33.setBackgroundColor(Color.WHITE);
				t.addCell(c33);
				
				myPhrase=new Phrase("REGISTRATION DETAILS",new Font(baseFont,font, Font.NORMAL));
				PdfPCell c2 = new PdfPCell(myPhrase);
				c2.setBorder(Rectangle.NO_BORDER);
				c2.setBackgroundColor(Color.WHITE);
				t.addCell(c2);
				
				myPhrase=new Phrase(" ",new Font(baseFont, 12, Font.NORMAL));
				PdfPCell c3 = new PdfPCell(myPhrase);
				c3.setBorder(Rectangle.NO_BORDER);
				c3.setBackgroundColor(Color.WHITE);
				t.addCell(c3);
				
			}
			catch (Exception e) 
			{
				System.out.println("Error creating PDF form for Mining :  " + e);
				e.printStackTrace();
			}
			return t;	
		}
	 
	 private PdfPTable createTableForTraderDetails(String regNo,String dated,String name,String panNo,String address,String certificateNo)
		{
			float[] widths = {50,15,50};
			PdfPTable t = new PdfPTable(3);
			
			try
			{
				t.setWidthPercentage(100);
				t.setWidths(widths);
				
				Phrase myPhrase1=new Phrase("REGISTRATION NO ",new Font(baseFont,font, Font.NORMAL));
				PdfPCell c = new PdfPCell(myPhrase1);
				c.setBackgroundColor(Color.WHITE);
				c.setBorder(Rectangle.NO_BORDER);
				t.addCell(c);
				
				Phrase myPhrase=new Phrase(":",new Font(baseFont,font, Font.BOLD));
				PdfPCell cd1 = new PdfPCell(myPhrase);
				cd1.setBorder(Rectangle.NO_BORDER);
				cd1.setBackgroundColor(Color.WHITE);
				t.addCell(cd1);
				
				myPhrase=new Phrase(regNo,new Font(baseFont,font, Font.NORMAL));
				PdfPCell c1 = new PdfPCell(myPhrase);
				c1.setBorder(Rectangle.NO_BORDER);
				c1.setBackgroundColor(Color.WHITE);
				t.addCell(c1);
				
				myPhrase1=new Phrase("DATED  ",new Font(baseFont,font, Font.NORMAL));
				PdfPCell c2 = new PdfPCell(myPhrase1);
				c2.setBorder(Rectangle.NO_BORDER);
				c2.setBackgroundColor(Color.WHITE);
				t.addCell(c2);
				
				myPhrase1=new Phrase(":",new Font(baseFont,font, Font.BOLD));
				PdfPCell cd2 = new PdfPCell(myPhrase1);
				cd2.setBorder(Rectangle.NO_BORDER);
				cd2.setBackgroundColor(Color.WHITE);
				t.addCell(cd2);
				
				myPhrase=new Phrase(dated,new Font(baseFont, font, Font.NORMAL));
				PdfPCell c3 = new PdfPCell(myPhrase);
				c3.setBorder(Rectangle.NO_BORDER);
				c3.setBackgroundColor(Color.WHITE);
				t.addCell(c3);
				
				myPhrase1=new Phrase("NAME ",new Font(baseFont,font, Font.NORMAL));
				PdfPCell c21 = new PdfPCell(myPhrase1);
				c21.setBorder(Rectangle.NO_BORDER);
				c21.setBackgroundColor(Color.WHITE);
				t.addCell(c21);
				
				myPhrase1=new Phrase(":",new Font(baseFont,font, Font.BOLD));
				PdfPCell cd21 = new PdfPCell(myPhrase1);
				cd21.setBorder(Rectangle.NO_BORDER);
				cd21.setBackgroundColor(Color.WHITE);
				t.addCell(cd21);
				
				myPhrase=new Phrase(name,new Font(baseFont, font, Font.NORMAL));
				PdfPCell c32 = new PdfPCell(myPhrase);
				c32.setBorder(Rectangle.NO_BORDER);
				c32.setBackgroundColor(Color.WHITE);
				t.addCell(c32);
				
				myPhrase1=new Phrase("PAN NO  ",new Font(baseFont,font, Font.NORMAL));
				PdfPCell c23 = new PdfPCell(myPhrase1);
				c23.setBorder(Rectangle.NO_BORDER);
				c23.setBackgroundColor(Color.WHITE);
				t.addCell(c23);
				
				myPhrase1=new Phrase(":",new Font(baseFont,font, Font.BOLD));
				PdfPCell cd24 = new PdfPCell(myPhrase1);
				cd24.setBorder(Rectangle.NO_BORDER);
				cd24.setBackgroundColor(Color.WHITE);
				t.addCell(cd24);
				
				myPhrase=new Phrase(panNo,new Font(baseFont, font, Font.NORMAL));
				PdfPCell c35 = new PdfPCell(myPhrase);
				c35.setBorder(Rectangle.NO_BORDER);
				c35.setBackgroundColor(Color.WHITE);
				t.addCell(c35);
				
				myPhrase1=new Phrase("REGISTERED ADDRESS  ",new Font(baseFont,font, Font.NORMAL));
				PdfPCell c26 = new PdfPCell(myPhrase1);
				c26.setBorder(Rectangle.NO_BORDER);
				c26.setBackgroundColor(Color.WHITE);
				t.addCell(c26);
				
				myPhrase1=new Phrase(":",new Font(baseFont,font, Font.BOLD));
				PdfPCell cd27 = new PdfPCell(myPhrase1);
				cd27.setBorder(Rectangle.NO_BORDER);
				cd27.setBackgroundColor(Color.WHITE);
				t.addCell(cd27);
				
				myPhrase=new Phrase(address,new Font(baseFont, font, Font.NORMAL));
				PdfPCell c38 = new PdfPCell(myPhrase);
				c38.setBorder(Rectangle.NO_BORDER);
				c38.setBackgroundColor(Color.WHITE);
				t.addCell(c38);
				
				myPhrase1=new Phrase("CERTIFICATE NO  ",new Font(baseFont,font, Font.NORMAL));
				PdfPCell c2q = new PdfPCell(myPhrase1);
				c2q.setBorder(Rectangle.NO_BORDER);
				c2q.setBackgroundColor(Color.WHITE);
				t.addCell(c2q);
				
				myPhrase1=new Phrase(":",new Font(baseFont,font, Font.BOLD));
				PdfPCell cd2w = new PdfPCell(myPhrase1);
				cd2w.setBorder(Rectangle.NO_BORDER);
				cd2w.setBackgroundColor(Color.WHITE);
				t.addCell(cd2w);
				
				myPhrase=new Phrase(certificateNo,new Font(baseFont, font, Font.NORMAL));
				PdfPCell c3w = new PdfPCell(myPhrase);
				c3w.setBorder(Rectangle.NO_BORDER);
				c3w.setBackgroundColor(Color.WHITE);
				t.addCell(c3w);
				
			}
			catch (Exception e) 
			{
				System.out.println("Error creating PDF form for Mining :  " + e);
				e.printStackTrace();
			}
			return t;	
		}	
	 
	 
	 private PdfPTable createLine()
		{
			float[] widths = {100};
			PdfPTable t = new PdfPTable(1);
			
			try
			{
				t.setWidthPercentage(100);
				t.setWidths(widths);
				
				Phrase myPhrase=new Phrase(" ",new Font(baseFont, 12, Font.NORMAL));
				PdfPCell c33 = new PdfPCell(myPhrase);
				c33.setBorder(Rectangle.NO_BORDER);
				c33.setBackgroundColor(Color.WHITE);
				t.addCell(c33);
					
				myPhrase=new Phrase("The following Certificate is valid for a period of one year from the date of issue unless cancelled " +
										   " and needs to be renewed on the expiry of period of validity.",new Font(baseFont,font, Font.NORMAL));
			    PdfPCell c7 = new PdfPCell(myPhrase);
			    c7.setBorder(Rectangle.NO_BORDER);
			    c7.setHorizontalAlignment(Rectangle.ALIGN_LEFT);
			    c7.setBackgroundColor(Color.WHITE);
			    t.addCell(c7);
				
				myPhrase=new Phrase(" ",new Font(baseFont,12, Font.NORMAL));
				PdfPCell c2 = new PdfPCell(myPhrase);
				c2.setBorder(Rectangle.NO_BORDER);
				c2.setBackgroundColor(Color.WHITE);
				t.addCell(c2);

			}
			catch (Exception e) 
			{
				System.out.println("Error creating PDF form for Mining :  " + e);
				e.printStackTrace();
			}
			return t;	
		}
	 
	 private PdfPTable createFooter () {

			float[] width = {30,10,30};
			PdfPTable maintable = new PdfPTable(3);
			
			try {
				
				maintable.setWidthPercentage(90);
				maintable.setWidths(width);
				
				String path = getServletContext().getRealPath("/")+"Main/modules/ironMining/images/authorizedsign.jpg";
				Image imgsign = Image.getInstance(path);
				
				String pathStap = getServletContext().getRealPath("/")+"Main/modules/ironMining/images/DMG_SEAL.jpg";
				Image imgStamp = Image.getInstance(pathStap);
				imgStamp.scaleToFit(5, 5);
				
				Phrase myPhrase=new Phrase("",new Font(baseFont, 1, Font.NORMAL));
				PdfPCell ci1 = new PdfPCell(myPhrase);
				ci1.setBackgroundColor(Color.WHITE);
				ci1.setHorizontalAlignment(Rectangle.ALIGN_LEFT);
				ci1.addElement(imgStamp);
				ci1.setBorder(Rectangle.NO_BORDER);
				maintable.addCell(ci1);
				
			    myPhrase=new Phrase("",new Font(baseFont,font, Font.NORMAL));
			    PdfPCell ck = new PdfPCell(myPhrase);
			    ck.setBorder(Rectangle.NO_BORDER);
			    ck.setHorizontalAlignment(Rectangle.ALIGN_RIGHT);
			    ck.setBackgroundColor(Color.WHITE);
			    maintable.addCell(ck);
				
			    myPhrase=new Phrase("",new Font(baseFont, 1, Font.NORMAL));
				PdfPCell ci = new PdfPCell(myPhrase);
				ci.setBackgroundColor(Color.WHITE);
				ci.setHorizontalAlignment(Rectangle.ALIGN_RIGHT);
				ci.addElement(imgsign);
				ci.setBorder(Rectangle.NO_BORDER);
				ci.disableBorderSide(Rectangle.TOP);
				maintable.addCell(ci);
				
				myPhrase=new Phrase("",new Font(baseFont,1, Font.NORMAL));
			    PdfPCell c0 = new PdfPCell(myPhrase);
			    c0.setBorder(Rectangle.NO_BORDER);
			    c0.setHorizontalAlignment(Rectangle.ALIGN_CENTER);
			    c0.setBackgroundColor(Color.WHITE);
			    maintable.addCell(c0);
				
				
			    myPhrase=new Phrase("",new Font(baseFont,1, Font.NORMAL));
			    PdfPCell c71= new PdfPCell(myPhrase);
			    c71.setBorder(Rectangle.NO_BORDER);
			    c71.setBackgroundColor(Color.WHITE);
			    maintable.addCell(c71);
			    
			    myPhrase=new Phrase("",new Font(baseFont,1, Font.NORMAL));
			    PdfPCell c7= new PdfPCell(myPhrase);
			    c7.setBorder(Rectangle.NO_BORDER);
			    c7.setBackgroundColor(Color.WHITE);
			    maintable.addCell(c7);
			    
			} catch (Exception e) {
				e.printStackTrace();
			}
			return maintable;
		}
	 
	 @SuppressWarnings("unchecked")
	public HashMap getTraderDetails(int id) {
		 
			Connection con = null;
			PreparedStatement pstmt = null;
			ResultSet rs = null;
			HashMap dataMap = new HashMap();
			SimpleDateFormat ddmmyyyy = new SimpleDateFormat("dd-MM-yyyy");
			SimpleDateFormat yyyymmdd = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
			try {
				con = DBConnection.getConnectionToDB("AMS");
				pstmt = con.prepareStatement(GET_TRADER_DETAILS);
				pstmt.setInt(1, id);
				rs = pstmt.executeQuery();
				if (rs.next()) {
					
					if(rs.getString("DATE_OF_ISSUE")==""|| rs.getString("DATE_OF_ISSUE").contains("1900")){
						dataMap.put("issuedDate", "");
					}else{
						dataMap.put("issuedDate", ddmmyyyy.format(yyyymmdd.parse(rs.getString("DATE_OF_ISSUE"))));
					}
					dataMap.put("certType", rs.getString("TYPE"));
					dataMap.put("panNo", rs.getString("PAN_NO"));
					dataMap.put("address", rs.getString("ADDRESS"));
					dataMap.put("nameOfTrader", rs.getString("ORGANIZATION_NAME"));
					dataMap.put("regNo", rs.getString("ORGANIZATION_CODE"));
					if(rs.getString("TYPE").equals("RAISING CONTRACTOR")){
						dataMap.put("certificateNo", rs.getString("IBM_TRADER_NO"));
					}else{
						dataMap.put("certificateNo", "NA");
					}
				}
				
			} catch (Exception e) {
				e.printStackTrace();
			} finally {
				DBConnection.releaseConnectionToDB(con, pstmt, rs);
			}
			return dataMap;
		}

	/** if directory not exists then create it */
	private void refreshdir(String reportpath)
	{
		try
		{
			File f = new File(reportpath);
			if(!f.exists())
			{
				f.mkdir();
			}
		}
		catch (Exception e) 
		{
			System.out.println("Error creating PDF form for Mining :  " + e);
			e.printStackTrace();
		}
	}

	private void printBill(ServletOutputStream servletOutputStream,HttpServletResponse response,String bill,String PDForm)
	{
		try
		{
			String formno=PDForm;
			response.setContentType("application/pdf");
			response.setHeader("Content-disposition","attachment;filename="+formno+".pdf");
			FileInputStream fis = new FileInputStream(bill);
			DataOutputStream outputStream = new	DataOutputStream(servletOutputStream);
			byte [] buffer = new byte [1024];
			int len = 0;
			while ((len = fis.read(buffer)) >= 0 ) 
			{
				outputStream.write(buffer, 0, len);
			}
			
			servletOutputStream.flush();
			servletOutputStream.close();
		}
		catch (Exception e) 
		{
			System.out.println("Error printing pdf form : " + e);
			e.printStackTrace();
		}
	}
}