package t4u.ironMining;


import java.awt.Color;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.util.Properties;

import javax.servlet.ServletException;
import javax.servlet.ServletOutputStream;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import t4u.common.ApplicationListener;
import t4u.common.DBConnection;

import com.lowagie.text.Document;
import com.lowagie.text.Font;
import com.lowagie.text.Image;
import com.lowagie.text.PageSize;
import com.lowagie.text.Phrase;
import com.lowagie.text.Rectangle;
import com.lowagie.text.pdf.BaseFont;
import com.lowagie.text.pdf.PdfPCell;
import com.lowagie.text.pdf.PdfPTable;
import com.lowagie.text.pdf.PdfWriter;

@SuppressWarnings("serial")
public class ChallanPDF extends HttpServlet {
	static BaseFont baseFont = null;
	static int font=10;
	static int fontsc=8;
	static float processFee=0;
	public String GET_CHALLAN_DETAILS=   " select isnull(mcd.GIOPF_RATE,0) as GIOPF_RATE ,isnull(mcd.GIOPF_QTY,0) as GIOPF_QTY,isnull(orm.ORGANIZATION_NAME,'') AS ORGANIZATION_NAME_PF,isnull(orm.ORGANIZATION_CODE,'') AS ORGANIZATION_CODE, " +
										 " isnull(CHALLAN_DATETIME,'') as CHALLAN_DATETIME,ahm.PAYMENT_ACC_HEAD,isnull(om.LEASE_NAME,'')as NAME,tc.TC_NO,tc.MINE_CODE,mcd.MINERAL_TYPE,mcd.TYPE,ROYALITY_FOR_MONTH,mcd.ACCOUNT_HEAD_ID,mcd.CHALLAN_TYPE,mcd.FINANCIAL_YEAR,  " +
										 " mcd.CHALLAN_NO,DATEPART(yyyy,mcd.ROYALITY_FOR_MONTH) as YEAR,DATENAME(month, mcd.ROYALITY_FOR_MONTH) as Month_Name,mcd.MINING_LEASE, isnull(e.ORGANIZATION_NAME,'') as ORGANIZATION_NAME,isnull(mpd.PERMIT_NO,0) as PERMIT_NO,isnull(mcd.TOTAL,0) AS TOTAL_PAYABLE,isnull(PROCESSING_FEE,0) as PROCESSING_FEE,isnull(TOTAL_PAYABLE,0) AS TOTAL_EWALLET_PAYABLE,isnull(E_WALLET_BALANCE,0) AS E_WALLET_BALANCE " + 
										 " from AMS.dbo.MINING_CHALLAN_DETAILS mcd   " +
										 " left outer  join AMS.dbo.MINING_TC_MASTER tc on mcd.TC_NO=tc.ID   " +
										 " left outer join AMS.dbo.MINE_OWNER_MASTER om on tc.SYSTEM_ID=om.SYSTEM_ID and tc.CUSTOMER_ID=om.CUSTOMER_ID and tc.TC_NO=om.TC_NO  " +
										 " left outer join AMS.dbo.ACCOUNTS_HEAD_MASTER ahm on mcd.ACCOUNT_HEAD_ID=ahm.ID  " +
										 " left outer join AMS.dbo.MINING_MINE_MASTER e on e.ID=tc.MINE_ID and e.SYSTEM_ID=tc.SYSTEM_ID and e.CUSTOMER_ID=tc.CUSTOMER_ID " +
										 " left outer join AMS.dbo.MINING_PERMIT_DETAILS mpd on mpd.ID=mcd.CLOSED_PERMIT_ID  " +
										 " left outer join AMS.dbo.MINING_ORGANIZATION_MASTER orm on orm.ID=mcd.ORGANIZATION_ID and mcd.CUSTOMER_ID=orm.CUSTOMER_ID AND mcd.SYSTEM_ID=orm.SYSTEM_ID " +
										 " where mcd.ID=? ";
	
	public String GET_GRADE_DETAILS=    " select isnull(GRADE,'') as GRADE,isnull(RATE,0) as RATE,isnull(QUANTITY,0) as QUANTITY,isnull(PAYABLE,0) as PAYABLE from AMS.dbo.CHALLAN_GRADE_DETAILS where CHALLAN_ID=? " ;
	
	public String GET_GRADE_DETAILS_FOR_OTHERS = "  select isnull(GRADE,'') as GRADE,isnull(RATE,0) as RATE,isnull(PAYABLE,0) as PAYABLE from AMS.dbo.CHALLAN_GRADE_DETAILS where CHALLAN_ID=?  " +
                                                 " and GRADE not in('TOTAL PAYABLE') " ;
	
	public String GET_TOTAL_FOR_OTHERS = " select 'TOTAL PAYABLE 1' as GRADE ,'' as RATE,0 AS QUANTITY,isnull(sum(PAYABLE),0) as PAYABLE from AMS.dbo.CHALLAN_GRADE_DETAILS where CHALLAN_ID=?  " +
                                         " and GRADE not in('TOTAL PAYABLE') " ;
	
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException
    {	
		try
		{
			ServletOutputStream servletOutputStream = response.getOutputStream();
			Properties properties = ApplicationListener.prop;
			String billpath=  properties.getProperty("Builtypath");
			int id1=Integer.parseInt(request.getParameter("autoGeneratedKeys"));
			refreshdir(billpath);
			String pdfFileName="AssetAcknowledgement";
			//String fontPath = "C:\\timesNew.ttf";
			String formno="CHALLAN FORM_"+id1;
			baseFont = BaseFont.createFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, false);
			String bill = billpath+ pdfFileName + ".pdf";
			generateBill(bill,request);
			printBill(servletOutputStream,response,bill,formno);
			
		}
		catch (Exception e) 
		{
			System.out.println("Error generating pdf form : " + e);
			e.printStackTrace();
		}
	}

	@SuppressWarnings("unchecked")
	private void generateBill(String bill,HttpServletRequest request) 
	{		
		try
		{			

			FileOutputStream fileOut = new FileOutputStream(bill);
			Document document = new Document(PageSize.A4, 40, 40, 30, 20);
			@SuppressWarnings("unused")
			PdfWriter writer = PdfWriter.getInstance(document,fileOut);
			document.open();
 
			int id=Integer.parseInt(request.getParameter("autoGeneratedKeys"));
			String buttonType=request.getParameter("buttonType");
			HashMap challanDetails=new HashMap();
			challanDetails=getDataForChallanDetails(id);
			
			String processFee=(String) challanDetails.get("processFee");
			String giopfRate=(String) challanDetails.get("giopfRate");
			String giopfQty=(String) challanDetails.get("giopfQty");
			
			ArrayList<Object> gradeDetails1 = new ArrayList<Object>();
			gradeDetails1=getGradeDetails(id);
				
			ArrayList<Object> gradeDetailsForOthers = new ArrayList<Object>();
			gradeDetailsForOthers=getGradeDetailsForOthers(id);
			
			HashMap gradeDetailsForBauxite = new HashMap();
			gradeDetailsForBauxite=getGradeDetailsForBauxite(id);
			
			ArrayList<Object> inputDetailsForBauxite = new ArrayList<Object>();
			inputDetailsForBauxite=getInputDetailsForBauxite(id);
			
			HashMap totalDetailsForOthers=new HashMap();
			totalDetailsForOthers=getTotalDetailsForOthers(id);
			
			HashMap totalDetails=new HashMap();
			totalDetails=getTotalCalulation(id,processFee,giopfRate,giopfQty);
			
			String heading1="Original";
			String heading2="Duplicate";
			String heading3="Triplicate";
			String heading4="Quadruplicate";
			String heading5="Bauxite Challan Inputs and Calculation";
			
			String challanDate=(String) challanDetails.get("challanDate");
			String challanNumber=(String) challanDetails.get("challanNo");
			String payment=(String) challanDetails.get("accPayment");
			String challanTcNo=(String) challanDetails.get("tcNo");
			String challanMineCode=(String) challanDetails.get("minecode");
			String leaseName=(String) challanDetails.get("leaseName");
			String leaseOwner=(String) challanDetails.get("ownerName");
			String challanOrgName=(String) challanDetails.get("orgName");
			String financialYear=(String) challanDetails.get("finacialYear");
			String typeOfChallan=(String) challanDetails.get("challanType");
			String type=(String) challanDetails.get("type");
			String challanRoyality=(String) challanDetails.get("royality");
			String year=(String) challanDetails.get("year");
			String month=(String) challanDetails.get("month");
			String challanmineralType=(String) challanDetails.get("mineralType");
			String orgNamePf=(String) challanDetails.get("orgnamePf");
			String orgCode=(String) challanDetails.get("orgCode");
			String nameInFull="";
			String place="";
			String date="";
			String closedPermitNo=(String) challanDetails.get("closedPermitNo");
			String totalPayablee=(String) challanDetails.get("totalPayablee");
			String ewalletTotal=(String) challanDetails.get("ewalletTotal");
			String ewalletBalance=(String) challanDetails.get("ewalletBalance");
			
			String royalitymt=(String) gradeDetailsForBauxite.get("royality/mt");
			String qtyXroyalitymt=(String) gradeDetailsForBauxite.get("qty*royality/mt");
			String tds=(String) gradeDetailsForBauxite.get("tds");
			String cellAmount=(String) gradeDetailsForBauxite.get("cellAmount");
			String processingFee=(String) gradeDetailsForBauxite.get("processingFee");
			String dmf=(String) gradeDetailsForBauxite.get("dmf");
			String nmet=(String) gradeDetailsForBauxite.get("nmet");
			String totalChallanAmt=(String) gradeDetailsForBauxite.get("totalChallanAmt");
			String QUANTITY=(String) gradeDetailsForBauxite.get("qty");
			String firstCalc=(String) gradeDetailsForBauxite.get("first");
			String SecCalc=(String) gradeDetailsForBauxite.get("2nd");
			
			/*--------------- First Page Starts-------------------- */
			PdfPTable image = createImage();
			if(!(buttonType.equals("add") || buttonType.equals("Modify"))){
			document.add(image);
			}else{document.add(createEmptyLogoHeader());}
			
			PdfPTable headingC = createChallanHeading(heading1,typeOfChallan,buttonType,type);
			document.add(headingC);
			
			PdfPTable Challanheader = createTableForChallanHeadings(challanNumber,challanDate);
			document.add(Challanheader);
			
			PdfPTable header = createHeader();
			document.add(header);
			
			PdfPTable details = createTableForChallan(challanNumber,payment,challanTcNo,challanMineCode,leaseName,leaseOwner,challanOrgName,financialYear,
	                            typeOfChallan,type,challanRoyality,challanmineralType,year,month,closedPermitNo,totalPayablee,orgNamePf,orgCode);
			document.add(details);
			
			PdfPTable gradeheader = createHeaderForGradeDetails();
			PdfPTable gradeDetails=null;
			
			if(typeOfChallan.equals("Others")){
				gradeDetails = createTableForGradeDetailsForOthers(gradeDetailsForOthers,totalDetailsForOthers);
			}else if (typeOfChallan.equals("Bauxite Challan")){
				gradeDetails = createTableForGradeDetailsForBauxiteFirst(royalitymt,qtyXroyalitymt,tds,cellAmount,processingFee,dmf,nmet,totalChallanAmt,QUANTITY);
			}else{
				gradeDetails = createTableForGradeDetails(gradeDetails1,totalDetails);
			}
				
			if(!type.equals("Single") && !type.equals("DMF") && !type.equals("NMET") && !type.equals("GIOPF") && !type.equals("Royalty") && !typeOfChallan.equalsIgnoreCase("Processing Fee")){
				document.add(gradeheader);
				document.add(gradeDetails);
			}
			PdfPTable ewalletDetails = createTableForEwalletDetails(ewalletBalance,ewalletTotal);
				
			if(typeOfChallan.equals("E-Wallet Challan") || typeOfChallan.equals("ROM")){
				document.add(ewalletDetails);
			}
				
			PdfPTable challanFooter = createChallanFooter(nameInFull, place, date);
			document.add(challanFooter);
			/*--------------- First Page ends-------------------- */
			if(!(buttonType.equals("add") || buttonType.equals("Modify"))){
			if(!typeOfChallan.equals("Processing Fee")){
			document.newPage();
			
			/*--------------- second Page starts-------------------- */
			if(!(buttonType.equals("add") || buttonType.equals("Modify"))){
				document.add(image);
			}else{document.add(createEmptyLogoHeader());}
			
            PdfPTable headingC2 = createChallanHeading(heading2,typeOfChallan,buttonType,type);
            document.add(headingC2);
            
            document.add(Challanheader);
			document.add(header);
			document.add(details);
			
			if(!type.equals("Single") && !type.equals("Single") && !type.equals("DMF") && !type.equals("NMET") && !type.equals("GIOPF") && !type.equals("Royalty") && !typeOfChallan.equalsIgnoreCase("Processing Fee")){
				document.add(gradeheader);
				document.add(gradeDetails);
			}
			if(typeOfChallan.equals("E-Wallet Challan") || typeOfChallan.equals("ROM")){
				document.add(ewalletDetails);
			}
			document.add(challanFooter);
			}
			
			if(!typeOfChallan.equals("Bauxite Challan") && !typeOfChallan.equals("Processing Fee")){
				document.newPage();
				if(!(buttonType.equals("add") || buttonType.equals("Modify"))){	
				document.add(image);
				}else{document.add(createEmptyLogoHeader());}
				
				PdfPTable headingC3 = createChallanHeading(heading3,typeOfChallan,buttonType,type);
	            document.add(headingC3);
				document.add(Challanheader);
				document.add(header);
				document.add(details);
				if(!type.equals("Single") && !type.equals("DMF") && !type.equals("NMET") && !type.equals("GIOPF") && !type.equals("Royalty") && !type.equals("Single") && !typeOfChallan.equalsIgnoreCase("Processing Fee")){
					document.add(gradeheader);
					document.add(gradeDetails);
				}
				
				if(typeOfChallan.equals("E-Wallet Challan") || typeOfChallan.equals("ROM")){
					document.add(ewalletDetails);
				}
				
				document.add(challanFooter);
				
				document.newPage();
				/*--------------- third Page starts-------------------- */
				if(!(buttonType.equals("add") || buttonType.equals("Modify"))){
				document.add(image);
				}else{document.add(createEmptyLogoHeader());}
				
				PdfPTable headingC4 = createChallanHeading(heading4,typeOfChallan,buttonType,type);
	            document.add(headingC4);
				document.add(Challanheader);
				document.add(header);
				document.add(details);
				if(!type.equals("Single") && !typeOfChallan.equalsIgnoreCase("Processing Fee")){
					document.add(gradeheader);
					document.add(gradeDetails);
				}
				if(typeOfChallan.equals("E-Wallet Challan") || typeOfChallan.equals("ROM")){
					document.add(ewalletDetails);
				}
				document.add(challanFooter);
				/*--------------- third Page ends-------------------- */
			}
			if (typeOfChallan.equals("Bauxite Challan")){
				document.newPage();
				
				if(!(buttonType.equals("add") || buttonType.equals("Modify"))){
				document.add(image);
				}else{document.add(createEmptyLogoHeader());}
				
				PdfPTable headingC5 = createChallanHeading(heading5,typeOfChallan,buttonType,type);
	            document.add(headingC5);
	            
				gradeDetails = createTableForGradeDetailsForBauxite(royalitymt,qtyXroyalitymt,tds,cellAmount,processingFee,dmf,nmet,totalChallanAmt,QUANTITY,inputDetailsForBauxite,firstCalc,SecCalc);
				document.add(gradeDetails);
			}
			}
			
			document.close();
		}
		catch (Exception e) 
		{
			System.out.println("Error generating report : " + e);
			e.printStackTrace();
		}
	}
	/** if directory not exists then create it */
	private void refreshdir(String reportpath)
	{
		try
		{
			File f = new File(reportpath);
			if(!f.exists())
			{
				f.mkdir();
			}
		}
		catch (Exception e) 
		{
			System.out.println("Error creating PDF form for Mining :  " + e);
			e.printStackTrace();
		}
	}
	
		 private PdfPTable createImage () {

				float[] width = {20};
				PdfPTable maintable = new PdfPTable(1);
				
				try {
					
					String path = getServletContext().getRealPath("/")+"Main/modules/ironMining/images/dmgLogo.png";
					Image img2 = Image.getInstance(path);
					
					maintable.setWidthPercentage(20);
					maintable.setWidths(width);
				   
					Phrase myPhrase=new Phrase("",new Font(baseFont, 1, Font.NORMAL));
					PdfPCell ci0 = new PdfPCell(myPhrase);
					ci0.setBackgroundColor(Color.WHITE);
					ci0.setBorder(Rectangle.NO_BORDER);
					maintable.addCell(ci0);
					
					myPhrase=new Phrase("",new Font(baseFont, 1, Font.NORMAL));
					PdfPCell ci1 = new PdfPCell(myPhrase);
					ci1.setBackgroundColor(Color.WHITE);
					ci1.setBorder(Rectangle.NO_BORDER);
					maintable.addCell(ci1);
//					
//					myPhrase=new Phrase("",new Font(baseFont, 1, Font.NORMAL));
//					PdfPCell ci12 = new PdfPCell(myPhrase);
//					ci12.setBackgroundColor(Color.WHITE);
//					ci12.setBorder(Rectangle.NO_BORDER);
//					maintable.addCell(ci12);
					
//					myPhrase=new Phrase("",new Font(baseFont, 1, Font.NORMAL));
//					PdfPCell ci11 = new PdfPCell(myPhrase);
//					ci11.setBackgroundColor(Color.WHITE);
//					ci11.setBorder(Rectangle.NO_BORDER);
//					maintable.addCell(ci11);
//					
//					myPhrase=new Phrase("",new Font(baseFont, 1, Font.NORMAL));
//					PdfPCell ci10 = new PdfPCell(myPhrase);
//					ci10.setBackgroundColor(Color.WHITE);
//					ci10.setBorder(Rectangle.NO_BORDER);
//					maintable.addCell(ci10);
//					
//					myPhrase=new Phrase("",new Font(baseFont, 1, Font.NORMAL));
//					PdfPCell ci2 = new PdfPCell(myPhrase);
//					ci2.setBackgroundColor(Color.WHITE);
//					ci2.setBorder(Rectangle.NO_BORDER);
//					maintable.addCell(ci2);
					
					myPhrase=new Phrase("",new Font(baseFont, 1, Font.NORMAL));
					PdfPCell ci = new PdfPCell(myPhrase);
					ci.setBackgroundColor(Color.WHITE);
					ci.setHorizontalAlignment(Rectangle.ALIGN_CENTER);
					ci.addElement(img2);
					ci.setBorder(Rectangle.NO_BORDER);
					ci.disableBorderSide(Rectangle.TOP);
					maintable.addCell(ci);
				    
				} catch (Exception e) {
					e.printStackTrace();
				}
				return maintable;
			}
		 
		 private PdfPTable createChallanHeading (String heading,String typeOfChallan,String buttonType,String type) {

				float[] width = {100};
				PdfPTable maintable = new PdfPTable(1);
				String challanHeading="";
				if(typeOfChallan.equals("ROM")){
					challanHeading="ROM CHALLAN";
				}
				else if(typeOfChallan.equals("Processed Ore")){
					challanHeading="PROCESSED ORE CHALLAN";
				}
				else if(typeOfChallan.equals("E-Wallet Challan")){
					challanHeading="E-WALLET CHALLAN";
				}
				else if(typeOfChallan.equals("Others")){
					if(type.equals("DMF") || type.equals("NMET") || type.equals("GIOPF") || type.equals("Royalty")){
						challanHeading="ASSESSMENT CHALLAN";
					}else{
						challanHeading="OTHERS CHALLAN";
					}
				}
				else if(typeOfChallan.equals("Processing Fee")){
					challanHeading="PROCESSING FEE CHALLAN";
				}
				try {
					
					maintable.setWidthPercentage(100);
					maintable.setWidths(width);
					Phrase myPhrase;
					
					if(!(buttonType.equals("add") || buttonType.equals("Modify"))){
					myPhrase=new Phrase("Government of Goa",new Font(baseFont,11, Font.NORMAL));
				    PdfPCell cb = new PdfPCell(myPhrase);
				    cb.setBorder(Rectangle.NO_BORDER);
				    cb.setHorizontalAlignment(Rectangle.ALIGN_CENTER);
				    cb.setBackgroundColor(Color.WHITE);
				    maintable.addCell(cb);
				    
				    myPhrase=new Phrase("Directorate of Mines & Geology",new Font(baseFont,13, Font.NORMAL));
				    PdfPCell cc = new PdfPCell(myPhrase);
				    cc.setBorder(Rectangle.NO_BORDER);
				    cc.setHorizontalAlignment(Rectangle.ALIGN_CENTER);
				    cc.setBackgroundColor(Color.WHITE);
				    maintable.addCell(cc);
					}
				    
					myPhrase=new Phrase(challanHeading,new Font(baseFont,11, Font.UNDERLINE));
				    PdfPCell ch = new PdfPCell(myPhrase);
				    ch.setBorder(Rectangle.NO_BORDER);
				    ch.setHorizontalAlignment(Rectangle.ALIGN_CENTER);
				    ch.setBackgroundColor(Color.WHITE);
				    maintable.addCell(ch);
				    
//					myPhrase=new Phrase(" ",new Font(baseFont,10, Font.NORMAL));
//				    PdfPCell c0 = new PdfPCell(myPhrase);
//				    c0.setBorder(Rectangle.NO_BORDER);
//				    c0.setHorizontalAlignment(Rectangle.ALIGN_CENTER);
//				    c0.setBackgroundColor(Color.WHITE);
//				    maintable.addCell(c0);
				    
					myPhrase=new Phrase(heading,new Font(baseFont,10, Font.UNDERLINE));
				    PdfPCell c = new PdfPCell(myPhrase);
				    c.setBorder(Rectangle.NO_BORDER);
				    c.setHorizontalAlignment(Rectangle.ALIGN_CENTER);
				    c.setBackgroundColor(Color.WHITE);
				    maintable.addCell(c);
				    
				    myPhrase=new Phrase(" ",new Font(baseFont,10, Font.NORMAL));
				    PdfPCell c1 = new PdfPCell(myPhrase);
				    c1.setBorder(Rectangle.NO_BORDER);
				    c1.setHorizontalAlignment(Rectangle.ALIGN_CENTER);
				    c1.setBackgroundColor(Color.WHITE);
				    maintable.addCell(c1);
				    
				} catch (Exception e) {
					e.printStackTrace();
				}
				return maintable;
			}
		 private PdfPTable createEmptyLogoHeader() {
			      float[] width = {100};
				  PdfPTable maintable = new PdfPTable(1);
				try {
					maintable.setWidthPercentage(100);
					maintable.setWidths(width);
					Phrase myPhrase=new Phrase("DRAFT",new Font(baseFont,12, Font.NORMAL));
				    PdfPCell c1 = new PdfPCell(myPhrase);
				    c1.setPaddingTop(60f);
				    c1.setBorder(Rectangle.NO_BORDER);
				    c1.setHorizontalAlignment(Rectangle.ALIGN_CENTER);
				    c1.setBackgroundColor(Color.WHITE);
				    maintable.addCell(c1);
				} catch (Exception e) {
					e.printStackTrace();
				}
				return maintable;
			}
		 
		 private PdfPTable createTableForChallanHeadings(String challanNumber,String challanDate)
			{
				float[] widths = {70,20,50};
				PdfPTable t = new PdfPTable(3);
				
				try
				{
					t.setWidthPercentage(100);
					t.setWidths(widths);
					
					Phrase myPhrase1=new Phrase("        Challan Number : "+challanNumber,new Font(baseFont,font, Font.NORMAL));
					PdfPCell c = new PdfPCell(myPhrase1);
					c.setBackgroundColor(Color.WHITE);
					c.setBorder(Rectangle.NO_BORDER);
					t.addCell(c);
					
					Phrase myPhrase=new Phrase("",new Font(baseFont,font, Font.NORMAL));
					PdfPCell c1 = new PdfPCell(myPhrase); 
					c1.setBorder(Rectangle.NO_BORDER);
					c.setBackgroundColor(Color.WHITE);
					t.addCell(c1);
					
					myPhrase1=new Phrase("        Challan Date : "+challanDate,new Font(baseFont,font, Font.NORMAL));
					PdfPCell c2 = new PdfPCell(myPhrase1);
					c2.setBorder(Rectangle.NO_BORDER);
					c2.setBackgroundColor(Color.WHITE);
					t.addCell(c2);
					
					myPhrase=new Phrase("",new Font(baseFont, font, Font.NORMAL));
					PdfPCell c3 = new PdfPCell(myPhrase);
					c3.setBorder(Rectangle.NO_BORDER);
					c3.setBackgroundColor(Color.WHITE);
					t.addCell(c3);
					
					
					myPhrase=new Phrase("",new Font(baseFont,font, Font.NORMAL));
					PdfPCell cs = new PdfPCell(myPhrase);
					cs.setBorder(Rectangle.NO_BORDER);
					cs.setBackgroundColor(Color.WHITE);
					t.addCell(cs);
					
					myPhrase=new Phrase("",new Font(baseFont,font, Font.NORMAL));
					PdfPCell cs1 = new PdfPCell(myPhrase);
					cs1.setBorder(Rectangle.NO_BORDER);
					cs1.setBackgroundColor(Color.WHITE);
					t.addCell(cs1);
//					
//					myPhrase=new Phrase("",new Font(baseFont,font, Font.NORMAL));
//					PdfPCell cs2 = new PdfPCell(myPhrase);
//					cs2.setBorder(Rectangle.NO_BORDER);
//					cs2.setBackgroundColor(Color.WHITE);
//					t.addCell(cs2);
//					
//					myPhrase=new Phrase("",new Font(baseFont,font, Font.NORMAL));
//					PdfPCell cs3 = new PdfPCell(myPhrase);
//					cs3.setBorder(Rectangle.NO_BORDER);
//					cs3.setBackgroundColor(Color.WHITE);
//					t.addCell(cs3);
				}
				catch (Exception e) 
				{
					System.out.println("Error creating PDF form for Mining :  " + e);
					e.printStackTrace();
				}
				return t;	
			}
		 
		 private PdfPTable createHeader () {

				float[] width = {100};
				PdfPTable maintable = new PdfPTable(1);
				
				try {
					
					maintable.setWidthPercentage(100);
					maintable.setWidths(width);
					
//					Phrase myPhrase=new Phrase(" ",new Font(baseFont,10, Font.NORMAL));
//				    PdfPCell c0 = new PdfPCell(myPhrase);
//				    c0.setBorder(Rectangle.NO_BORDER);
//				    c0.setHorizontalAlignment(Rectangle.ALIGN_CENTER);
//				    c0.setBackgroundColor(Color.WHITE);
//				    maintable.addCell(c0);
				    
					Phrase myPhrase=new Phrase("MINERAL DETAILS",new Font(baseFont,10, Font.UNDERLINE));
				    PdfPCell c = new PdfPCell(myPhrase);
				    c.setBorder(Rectangle.NO_BORDER);
				    c.setHorizontalAlignment(Rectangle.ALIGN_CENTER);
				    c.setBackgroundColor(Color.WHITE);
				    maintable.addCell(c);
				    
				    myPhrase=new Phrase(" ",new Font(baseFont,10, Font.NORMAL));
				    PdfPCell c1 = new PdfPCell(myPhrase);
				    c1.setBorder(Rectangle.NO_BORDER);
				    c1.setHorizontalAlignment(Rectangle.ALIGN_CENTER);
				    c1.setBackgroundColor(Color.WHITE);
				    maintable.addCell(c1);
				    
				} catch (Exception e) {
					e.printStackTrace();
				}
				return maintable;
			}
		 
		 private PdfPTable createHeaderForGradeDetails () {

				float[] width = {100};
				PdfPTable maintable = new PdfPTable(1);
				
				try {
					
					maintable.setWidthPercentage(100);
					maintable.setWidths(width);
//					
//					Phrase myPhrase=new Phrase(" ",new Font(baseFont,10, Font.NORMAL));
//				    PdfPCell c0 = new PdfPCell(myPhrase);
//				    c0.setBorder(Rectangle.NO_BORDER);
//				    c0.setHorizontalAlignment(Rectangle.ALIGN_CENTER);
//				    c0.setBackgroundColor(Color.WHITE);
//				    maintable.addCell(c0);
				    
					Phrase myPhrase=new Phrase("GRADE DETAILS",new Font(baseFont,10, Font.UNDERLINE));
				    PdfPCell c = new PdfPCell(myPhrase);
				    c.setBorder(Rectangle.NO_BORDER);
				    c.setHorizontalAlignment(Rectangle.ALIGN_CENTER);
				    c.setBackgroundColor(Color.WHITE);
				    maintable.addCell(c);
				    
				    myPhrase=new Phrase(" ",new Font(baseFont,10, Font.NORMAL));
				    PdfPCell c1 = new PdfPCell(myPhrase);
				    c1.setBorder(Rectangle.NO_BORDER);
				    c1.setHorizontalAlignment(Rectangle.ALIGN_CENTER);
				    c1.setBackgroundColor(Color.WHITE);
				    maintable.addCell(c1);
				    
				} catch (Exception e) {
					e.printStackTrace();
				}
				return maintable;
			}
		 
		 
		 private PdfPTable createTableForChallan(String challanNumber,String payment,String challanTcNo,String challanMineCode,String leaseName,String leaseOwner,String challanOrgName,String financialYear,
				 String typeOfChallan,String type,String challanRoyality,String challanmineralType,String year,String month,String closedPermitNo,String totalPayablee,String orgNamePf,String orgCode)
			{
				float[] widths = {50,20,30};
				PdfPTable t = new PdfPTable(3);
				
				try
				{
					t.setWidthPercentage(100);
					t.setWidths(widths);
					
					Phrase myPhrase1=new Phrase("        Payment A/c Head  ",new Font(baseFont,font, Font.NORMAL));
					PdfPCell c = new PdfPCell(myPhrase1);
					c.setBackgroundColor(Color.WHITE);
					c.setBorder(Rectangle.NO_BORDER);
					t.addCell(c);
					
					Phrase myPhrase=new Phrase(":",new Font(baseFont,font, Font.BOLD));
					PdfPCell cd1 = new PdfPCell(myPhrase);
					cd1.setBorder(Rectangle.NO_BORDER);
					cd1.setBackgroundColor(Color.WHITE);
					t.addCell(cd1);
					
					myPhrase=new Phrase(payment,new Font(baseFont,font, Font.NORMAL));
					PdfPCell c1 = new PdfPCell(myPhrase);
					c1.setBorder(Rectangle.NO_BORDER);
					c.setBackgroundColor(Color.WHITE);
					t.addCell(c1);
					
					myPhrase=new Phrase(" ",new Font(baseFont,fontsc, Font.NORMAL));
					PdfPCell cs = new PdfPCell(myPhrase);
					cs.setBorder(Rectangle.NO_BORDER);
					cs.setBackgroundColor(Color.WHITE);
					t.addCell(cs);
					
					myPhrase=new Phrase(" ",new Font(baseFont,fontsc, Font.NORMAL));
					PdfPCell cs1 = new PdfPCell(myPhrase);
					cs1.setBorder(Rectangle.NO_BORDER);
					cs1.setBackgroundColor(Color.WHITE);
					t.addCell(cs1);
					
					myPhrase=new Phrase(" ",new Font(baseFont,fontsc, Font.NORMAL));
					cs.setBorder(Rectangle.NO_BORDER);
					cs.setBackgroundColor(Color.WHITE);
					t.addCell(cs);
					
					if(!typeOfChallan.equalsIgnoreCase("Processing Fee")){
						myPhrase1=new Phrase("        T.C. No.  ",new Font(baseFont,font, Font.NORMAL));
						PdfPCell c2 = new PdfPCell(myPhrase1);
						c2.setBorder(Rectangle.NO_BORDER);
						c2.setBackgroundColor(Color.WHITE);
						t.addCell(c2);
						
						myPhrase=new Phrase(":",new Font(baseFont,font, Font.BOLD));
						cd1.setBorder(Rectangle.NO_BORDER);
						cd1.setBackgroundColor(Color.WHITE);
						t.addCell(cd1);
						
						myPhrase=new Phrase(challanTcNo,new Font(baseFont, font, Font.BOLD));
						PdfPCell c3 = new PdfPCell(myPhrase);
						c3.setBorder(Rectangle.NO_BORDER);
						c3.setBackgroundColor(Color.WHITE);
						t.addCell(c3);
						
						myPhrase=new Phrase(" ",new Font(baseFont,fontsc, Font.NORMAL));
						PdfPCell cs2 = new PdfPCell(myPhrase);
						cs2.setBorder(Rectangle.NO_BORDER);
						cs2.setBackgroundColor(Color.WHITE);
						t.addCell(cs2);
						
						myPhrase=new Phrase(" ",new Font(baseFont,fontsc, Font.NORMAL));
						PdfPCell cs3 = new PdfPCell(myPhrase);
						cs3.setBorder(Rectangle.NO_BORDER);
						cs3.setBackgroundColor(Color.WHITE);
						t.addCell(cs3);
						
						myPhrase=new Phrase(" ",new Font(baseFont,fontsc, Font.NORMAL));
						cs.setBorder(Rectangle.NO_BORDER);
						cs.setBackgroundColor(Color.WHITE);
						t.addCell(cs);
						
						myPhrase1=new Phrase("        Mine Code    ",new Font(baseFont,font, Font.NORMAL));
						PdfPCell c4 = new PdfPCell(myPhrase1);
						c4.setBorder(Rectangle.NO_BORDER);
						c4.setBackgroundColor(Color.WHITE);
						t.addCell(c4);
						
						myPhrase=new Phrase(":",new Font(baseFont,font, Font.BOLD));
						cd1.setBorder(Rectangle.NO_BORDER);
						cd1.setBackgroundColor(Color.WHITE);
						t.addCell(cd1);
						
						myPhrase=new Phrase(challanMineCode,new Font(baseFont, font, Font.NORMAL));
						PdfPCell c5 = new PdfPCell(myPhrase);
						c5.setBorder(Rectangle.NO_BORDER);
						c5.setBackgroundColor(Color.WHITE);
						t.addCell(c5);
						
						myPhrase=new Phrase(" ",new Font(baseFont,fontsc, Font.NORMAL));
						PdfPCell cs4 = new PdfPCell(myPhrase);
						cs4.setBorder(Rectangle.NO_BORDER);
						cs4.setBackgroundColor(Color.WHITE);
						t.addCell(cs4);
						
						myPhrase=new Phrase(" ",new Font(baseFont,fontsc, Font.NORMAL));
						PdfPCell cs5 = new PdfPCell(myPhrase);
						cs5.setBorder(Rectangle.NO_BORDER);
						cs5.setBackgroundColor(Color.WHITE);
						t.addCell(cs5);
						
						myPhrase=new Phrase(" ",new Font(baseFont,fontsc, Font.NORMAL));
						cs.setBorder(Rectangle.NO_BORDER);
						cs.setBackgroundColor(Color.WHITE);
						t.addCell(cs);
						
						myPhrase1=new Phrase("        Lease Name  ",new Font(baseFont,font, Font.NORMAL));
						PdfPCell c6 = new PdfPCell(myPhrase1);
						c6.setBorder(Rectangle.NO_BORDER);
						c6.setBackgroundColor(Color.WHITE);
						t.addCell(c6);
						
						myPhrase=new Phrase(":",new Font(baseFont,font, Font.BOLD));
						cd1.setBorder(Rectangle.NO_BORDER);
						cd1.setBackgroundColor(Color.WHITE);
						t.addCell(cd1);
						
						myPhrase=new Phrase(leaseName,new Font(baseFont, font, Font.BOLD));
						PdfPCell c7 = new PdfPCell(myPhrase);
						c7.setBorder(Rectangle.NO_BORDER);
						c7.setBackgroundColor(Color.WHITE);
						t.addCell(c7);
						
						myPhrase=new Phrase(" ",new Font(baseFont,fontsc, Font.NORMAL));
						PdfPCell cs6 = new PdfPCell(myPhrase);
						cs6.setBorder(Rectangle.NO_BORDER);
						cs6.setBackgroundColor(Color.WHITE);
						t.addCell(cs6);
						
						myPhrase=new Phrase(" ",new Font(baseFont,fontsc, Font.NORMAL));
						PdfPCell cs7 = new PdfPCell(myPhrase);
						cs7.setBorder(Rectangle.NO_BORDER);
						cs7.setBackgroundColor(Color.WHITE);
						t.addCell(cs7);
						
						myPhrase=new Phrase(" ",new Font(baseFont,fontsc, Font.NORMAL));
						cs.setBorder(Rectangle.NO_BORDER);
						cs.setBackgroundColor(Color.WHITE);
						t.addCell(cs);
						
						myPhrase1=new Phrase("        Lease Owner ",new Font(baseFont,font, Font.NORMAL));
						PdfPCell c006 = new PdfPCell(myPhrase1);
						c006.setBorder(Rectangle.NO_BORDER);
						c006.setBackgroundColor(Color.WHITE);
						t.addCell(c006);
						
						myPhrase=new Phrase(":",new Font(baseFont,font, Font.BOLD));
						cd1.setBorder(Rectangle.NO_BORDER);
						cd1.setBackgroundColor(Color.WHITE);
						t.addCell(cd1);
						
						myPhrase=new Phrase(leaseOwner,new Font(baseFont, font, Font.NORMAL));
						PdfPCell c007 = new PdfPCell(myPhrase);
						c007.setBorder(Rectangle.NO_BORDER);
						c007.setBackgroundColor(Color.WHITE);
						t.addCell(c007);
						
						myPhrase=new Phrase(" ",new Font(baseFont,fontsc, Font.NORMAL));
						PdfPCell cs8 = new PdfPCell(myPhrase);
						cs8.setBorder(Rectangle.NO_BORDER);
						cs8.setBackgroundColor(Color.WHITE);
						t.addCell(cs8);
						
						myPhrase=new Phrase(" ",new Font(baseFont,fontsc, Font.NORMAL));
						PdfPCell cs9 = new PdfPCell(myPhrase);
						cs9.setBorder(Rectangle.NO_BORDER);
						cs9.setBackgroundColor(Color.WHITE);
						t.addCell(cs9);
						
						myPhrase=new Phrase(" ",new Font(baseFont,fontsc, Font.NORMAL));
						cs.setBorder(Rectangle.NO_BORDER);
						cs.setBackgroundColor(Color.WHITE);
						t.addCell(cs);
						
						myPhrase1=new Phrase("        Organization Name  ",new Font(baseFont,font, Font.NORMAL));
						PdfPCell c06 = new PdfPCell(myPhrase1);
						c06.setBorder(Rectangle.NO_BORDER);
						c06.setBackgroundColor(Color.WHITE);
						t.addCell(c06);
						
						myPhrase=new Phrase(":",new Font(baseFont,font, Font.BOLD));
						cd1.setBorder(Rectangle.NO_BORDER);
						cd1.setBackgroundColor(Color.WHITE);
						t.addCell(cd1);
						
						myPhrase=new Phrase(challanOrgName,new Font(baseFont, font, Font.BOLD));
						PdfPCell c07 = new PdfPCell(myPhrase);
						c07.setBorder(Rectangle.NO_BORDER);
						c07.setBackgroundColor(Color.WHITE);
						t.addCell(c07);
					}
					if(typeOfChallan.equalsIgnoreCase("Processing Fee")){
						myPhrase1=new Phrase("        Organization/Trader Code  ",new Font(baseFont,font, Font.NORMAL));
						PdfPCell c2 = new PdfPCell(myPhrase1);
						c2.setBorder(Rectangle.NO_BORDER);
						c2.setBackgroundColor(Color.WHITE);
						t.addCell(c2);
						
						myPhrase=new Phrase(":",new Font(baseFont,font, Font.BOLD));
						cd1.setBorder(Rectangle.NO_BORDER);
						cd1.setBackgroundColor(Color.WHITE);
						t.addCell(cd1);
						
						myPhrase=new Phrase(orgCode,new Font(baseFont, font, Font.BOLD));
						PdfPCell c3 = new PdfPCell(myPhrase);
						c3.setBorder(Rectangle.NO_BORDER);
						c3.setBackgroundColor(Color.WHITE);
						t.addCell(c3);
						
						myPhrase=new Phrase(" ",new Font(baseFont,fontsc, Font.NORMAL));
						PdfPCell cs2 = new PdfPCell(myPhrase);
						cs2.setBorder(Rectangle.NO_BORDER);
						cs2.setBackgroundColor(Color.WHITE);
						t.addCell(cs2);
						
						myPhrase=new Phrase(" ",new Font(baseFont,fontsc, Font.NORMAL));
						PdfPCell cs3 = new PdfPCell(myPhrase);
						cs3.setBorder(Rectangle.NO_BORDER);
						cs3.setBackgroundColor(Color.WHITE);
						t.addCell(cs3);
						
						myPhrase=new Phrase(" ",new Font(baseFont,fontsc, Font.NORMAL));
						cs.setBorder(Rectangle.NO_BORDER);
						cs.setBackgroundColor(Color.WHITE);
						t.addCell(cs);
						
						myPhrase1=new Phrase("        Organization/Trader Name    ",new Font(baseFont,font, Font.NORMAL));
						PdfPCell c4 = new PdfPCell(myPhrase1);
						c4.setBorder(Rectangle.NO_BORDER);
						c4.setBackgroundColor(Color.WHITE);
						t.addCell(c4);
						
						myPhrase=new Phrase(":",new Font(baseFont,font, Font.BOLD));
						cd1.setBorder(Rectangle.NO_BORDER);
						cd1.setBackgroundColor(Color.WHITE);
						t.addCell(cd1);
						
						myPhrase=new Phrase(orgNamePf,new Font(baseFont, font, Font.NORMAL));
						PdfPCell c5 = new PdfPCell(myPhrase);
						c5.setBorder(Rectangle.NO_BORDER);
						c5.setBackgroundColor(Color.WHITE);
						t.addCell(c5);
					}
					
					myPhrase=new Phrase(" ",new Font(baseFont,fontsc, Font.NORMAL));
					PdfPCell cs10 = new PdfPCell(myPhrase);
					cs10.setBorder(Rectangle.NO_BORDER);
					cs10.setBackgroundColor(Color.WHITE);
					t.addCell(cs10);
					
					myPhrase=new Phrase(" ",new Font(baseFont,fontsc, Font.NORMAL));
					PdfPCell cs11 = new PdfPCell(myPhrase);
					cs11.setBorder(Rectangle.NO_BORDER);
					cs11.setBackgroundColor(Color.WHITE);
					t.addCell(cs11);
					
					myPhrase=new Phrase(" ",new Font(baseFont,fontsc, Font.NORMAL));
					cs.setBorder(Rectangle.NO_BORDER);
					cs.setBackgroundColor(Color.WHITE);
					t.addCell(cs);
					
					myPhrase1=new Phrase("        Financial Year  ",new Font(baseFont,font, Font.NORMAL));
					PdfPCell c8 = new PdfPCell(myPhrase1);
					c8.setBorder(Rectangle.NO_BORDER);
					c8.setBackgroundColor(Color.WHITE);
					t.addCell(c8);
					
					myPhrase=new Phrase(":",new Font(baseFont,font, Font.BOLD));
					cd1.setBorder(Rectangle.NO_BORDER);
					cd1.setBackgroundColor(Color.WHITE);
					t.addCell(cd1);
					
					myPhrase=new Phrase(financialYear,new Font(baseFont, font, Font.NORMAL));
					PdfPCell c9 = new PdfPCell(myPhrase);
					c9.setBorder(Rectangle.NO_BORDER);
					c9.setBackgroundColor(Color.WHITE);
					t.addCell(c9);
					
					myPhrase=new Phrase(" ",new Font(baseFont,fontsc, Font.NORMAL));
					PdfPCell cs12 = new PdfPCell(myPhrase);
					cs12.setBorder(Rectangle.NO_BORDER);
					cs12.setBackgroundColor(Color.WHITE);
					t.addCell(cs12);
					
					myPhrase=new Phrase(" ",new Font(baseFont,fontsc, Font.NORMAL));
					PdfPCell cs13 = new PdfPCell(myPhrase);
					cs13.setBorder(Rectangle.NO_BORDER);
					cs13.setBackgroundColor(Color.WHITE);
					t.addCell(cs13);
					
					myPhrase=new Phrase(" ",new Font(baseFont,fontsc, Font.NORMAL));
					cs.setBorder(Rectangle.NO_BORDER);
					cs.setBackgroundColor(Color.WHITE);
					t.addCell(cs);
					
					myPhrase1=new Phrase("        Type of Challan     ",new Font(baseFont,font, Font.NORMAL));
					PdfPCell c10 = new PdfPCell(myPhrase1);
					c10.setBorder(Rectangle.NO_BORDER);
					c10.setBackgroundColor(Color.WHITE);
					t.addCell(c10);
					
					myPhrase=new Phrase(":",new Font(baseFont,font, Font.BOLD));
					cd1.setBorder(Rectangle.NO_BORDER);
					cd1.setBackgroundColor(Color.WHITE);
					t.addCell(cd1);
					
					myPhrase=new Phrase(typeOfChallan,new Font(baseFont, font, Font.NORMAL));
					PdfPCell c11 = new PdfPCell(myPhrase);
					c11.setBorder(Rectangle.NO_BORDER);
					c11.setBackgroundColor(Color.WHITE);
					t.addCell(c11);
					
					myPhrase=new Phrase(" ",new Font(baseFont,fontsc, Font.NORMAL));
					PdfPCell cs14 = new PdfPCell(myPhrase);
					cs14.setBorder(Rectangle.NO_BORDER);
					cs14.setBackgroundColor(Color.WHITE);
					t.addCell(cs14);
					
					myPhrase=new Phrase(" ",new Font(baseFont,fontsc, Font.NORMAL));
					PdfPCell cs15 = new PdfPCell(myPhrase);
					cs15.setBorder(Rectangle.NO_BORDER);
					cs15.setBackgroundColor(Color.WHITE);
					t.addCell(cs15);
					
					myPhrase=new Phrase(" ",new Font(baseFont,fontsc, Font.NORMAL));
					cs.setBorder(Rectangle.NO_BORDER);
					cs.setBackgroundColor(Color.WHITE);
					t.addCell(cs);
					if(typeOfChallan.equals("Others")){
						
						myPhrase1=new Phrase("        Type  ",new Font(baseFont,font, Font.NORMAL));
						PdfPCell c12 = new PdfPCell(myPhrase1);
						c12.setBorder(Rectangle.NO_BORDER);
						c12.setBackgroundColor(Color.WHITE);
						t.addCell(c12);
						
						myPhrase=new Phrase(":",new Font(baseFont,font, Font.BOLD));
						cd1.setBorder(Rectangle.NO_BORDER);
						cd1.setBackgroundColor(Color.WHITE);
						t.addCell(cd1);
						
						myPhrase=new Phrase(type,new Font(baseFont, font, Font.NORMAL));
						PdfPCell c13 = new PdfPCell(myPhrase);
						c13.setBorder(Rectangle.NO_BORDER);
						c13.setBackgroundColor(Color.WHITE);
						t.addCell(c13);
						
						myPhrase=new Phrase(" ",new Font(baseFont,fontsc, Font.NORMAL));
						PdfPCell cs16 = new PdfPCell(myPhrase);
						cs16.setBorder(Rectangle.NO_BORDER);
						cs16.setBackgroundColor(Color.WHITE);
						t.addCell(cs16);
						
						myPhrase=new Phrase(" ",new Font(baseFont,fontsc, Font.NORMAL));
						PdfPCell cs17 = new PdfPCell(myPhrase);
						cs17.setBorder(Rectangle.NO_BORDER);
						cs17.setBackgroundColor(Color.WHITE);
						t.addCell(cs17);
						
						myPhrase=new Phrase(" ",new Font(baseFont,fontsc, Font.NORMAL));
						cs.setBorder(Rectangle.NO_BORDER);
						cs.setBackgroundColor(Color.WHITE);
						t.addCell(cs);
					}
					if(!typeOfChallan.equals("Processing Fee")){
						myPhrase1=new Phrase("        IBM Average Sale Price Month   ",new Font(baseFont,font, Font.NORMAL));
						PdfPCell c14 = new PdfPCell(myPhrase1);
						c14.setBackgroundColor(Color.WHITE);
						c14.setBorder(Rectangle.NO_BORDER);
						t.addCell(c14);
						
						myPhrase=new Phrase(":",new Font(baseFont,font, Font.BOLD));
						cd1.setBorder(Rectangle.NO_BORDER);
						cd1.setBackgroundColor(Color.WHITE);
						t.addCell(cd1);
						
						myPhrase=new Phrase(month+" "+year,new Font(baseFont, font, Font.NORMAL));
						PdfPCell c15 = new PdfPCell(myPhrase);
						c15.setBorder(Rectangle.NO_BORDER);
						c15.setBackgroundColor(Color.WHITE);
						t.addCell(c15);
						
						myPhrase=new Phrase(" ",new Font(baseFont,fontsc, Font.NORMAL));
						PdfPCell cs107 = new PdfPCell(myPhrase);
						cs107.setBorder(Rectangle.NO_BORDER);
						cs107.setBackgroundColor(Color.WHITE);
						t.addCell(cs107);
						
						myPhrase=new Phrase(" ",new Font(baseFont,fontsc, Font.NORMAL));
						PdfPCell cs18 = new PdfPCell(myPhrase);
						cs18.setBorder(Rectangle.NO_BORDER);
						cs18.setBackgroundColor(Color.WHITE);
						t.addCell(cs18);
						
						myPhrase=new Phrase(" ",new Font(baseFont,fontsc, Font.NORMAL));
						cs.setBorder(Rectangle.NO_BORDER);
						cs.setBackgroundColor(Color.WHITE);
						t.addCell(cs);
					}
		
					
					myPhrase1=new Phrase("        Mineral Type  ",new Font(baseFont,font, Font.NORMAL));
					PdfPCell c16 = new PdfPCell(myPhrase1);
					c16.setBorder(Rectangle.NO_BORDER);
					c16.setBackgroundColor(Color.WHITE);
					t.addCell(c16);
					
					myPhrase=new Phrase(":",new Font(baseFont,font, Font.BOLD));
					cd1.setBorder(Rectangle.NO_BORDER);
					cd1.setBackgroundColor(Color.WHITE);
					t.addCell(cd1);
					
					myPhrase=new Phrase(challanmineralType,new Font(baseFont, font, Font.NORMAL));
					PdfPCell c17 = new PdfPCell(myPhrase);
					c17.setBorder(Rectangle.NO_BORDER);
					c17.setBackgroundColor(Color.WHITE);
					t.addCell(c17);
                    
					myPhrase=new Phrase(" ",new Font(baseFont,fontsc, Font.NORMAL));
					PdfPCell cs90 = new PdfPCell(myPhrase);
					cs90.setBorder(Rectangle.NO_BORDER);
					cs90.setBackgroundColor(Color.WHITE);
					t.addCell(cs90);
					
					myPhrase=new Phrase(" ",new Font(baseFont,fontsc, Font.NORMAL));
					PdfPCell cs191 = new PdfPCell(myPhrase);
					cs191.setBorder(Rectangle.NO_BORDER);
					cs191.setBackgroundColor(Color.WHITE);
					t.addCell(cs191);
					
					myPhrase=new Phrase(" ",new Font(baseFont,fontsc, Font.NORMAL));
					cs.setBorder(Rectangle.NO_BORDER);
					cs.setBackgroundColor(Color.WHITE);
					t.addCell(cs);
					
					if((typeOfChallan.equals("Others") && type.equals("Single") && type.equals("DMF") && type.equals("NMET") && type.equals("GIOPF") && type.equals("Royalty")) || typeOfChallan.equals("Processing Fee")){
						myPhrase1=new Phrase("        Total Payable  ",new Font(baseFont,font, Font.NORMAL));
						PdfPCell c165 = new PdfPCell(myPhrase1);
						c165.setBorder(Rectangle.NO_BORDER);
						c165.setBackgroundColor(Color.WHITE);
						t.addCell(c165);
						
						myPhrase=new Phrase(":",new Font(baseFont,font, Font.BOLD));
						cd1.setBorder(Rectangle.NO_BORDER);
						cd1.setBackgroundColor(Color.WHITE);
						t.addCell(cd1);
						
						myPhrase=new Phrase(totalPayablee,new Font(baseFont, font, Font.NORMAL));
						PdfPCell c175= new PdfPCell(myPhrase);
						c175.setBorder(Rectangle.NO_BORDER);
						c175.setBackgroundColor(Color.WHITE);
						t.addCell(c175);
						
					}
					
					if(typeOfChallan.equals("ROM")){
						myPhrase1=new Phrase("        Closed Permit No.  ",new Font(baseFont,font, Font.NORMAL));
						PdfPCell c165 = new PdfPCell(myPhrase1);
						c165.setBorder(Rectangle.NO_BORDER);
						c165.setBackgroundColor(Color.WHITE);
						t.addCell(c165);
						
						myPhrase=new Phrase(":",new Font(baseFont,font, Font.BOLD));
						cd1.setBorder(Rectangle.NO_BORDER);
						cd1.setBackgroundColor(Color.WHITE);
						t.addCell(cd1);
						
						myPhrase=new Phrase(closedPermitNo,new Font(baseFont, font, Font.NORMAL));
						PdfPCell c175= new PdfPCell(myPhrase);
						c175.setBorder(Rectangle.NO_BORDER);
						c175.setBackgroundColor(Color.WHITE);
						t.addCell(c175);
						
					}
				}
				catch (Exception e) 
				{
					System.out.println("Error creating PDF form for Mining :  " + e);
					e.printStackTrace();
				}
				return t;	
			}	
		 
		 private PdfPTable createTableForGradeDetails(ArrayList<Object> gradeData,Map totalDetails)
			{
				float[] widths = {40,30,30,30};
				PdfPTable t = new PdfPTable(4);
				
				try
				{
					t.setWidthPercentage(100);
					t.setWidths(widths);
					
					Phrase myPhrase=new Phrase("  Grades",new Font(baseFont,font, Font.BOLD));
					PdfPCell c = new PdfPCell(myPhrase);
					c.setHorizontalAlignment(Rectangle.ALIGN_LEFT);
					c.setBackgroundColor(Color.WHITE);
					t.addCell(c);
					
					myPhrase=new Phrase("Rate/TON",new Font(baseFont,font, Font.BOLD));
					PdfPCell c2 = new PdfPCell(myPhrase);
					c2.setHorizontalAlignment(Rectangle.ALIGN_RIGHT);
					c2.setBackgroundColor(Color.WHITE);
					t.addCell(c2);
					
					myPhrase=new Phrase("Quantity",new Font(baseFont, font, Font.BOLD));
					PdfPCell c3 = new PdfPCell(myPhrase);
					c3.setBackgroundColor(Color.WHITE);
					c3.setHorizontalAlignment(Rectangle.ALIGN_RIGHT);
					t.addCell(c3);
					
					myPhrase=new Phrase("Payable",new Font(baseFont,font, Font.BOLD));
					PdfPCell c4 = new PdfPCell(myPhrase);
					c4.setHorizontalAlignment(Rectangle.ALIGN_RIGHT);
					c4.setBackgroundColor(Color.WHITE);
					t.addCell(c4);
					
					if(gradeData.size()>0){
						for(int i=0;i<gradeData.size();i++){
							String data=(String) gradeData.get(i);
							if(data.matches(".*[A-Za-z].*")){
								myPhrase=new Phrase("  "+(String) gradeData.get(i),new Font(baseFont,10, Font.NORMAL));
								PdfPCell c9 = new PdfPCell(myPhrase);
								c9.setHorizontalAlignment(Rectangle.ALIGN_LEFT);
								c9.setBackgroundColor(Color.WHITE);
								t.addCell(c9);
							}else{
								myPhrase=new Phrase((String) gradeData.get(i),new Font(baseFont,10, Font.NORMAL));
								PdfPCell c9 = new PdfPCell(myPhrase);
								c9.setHorizontalAlignment(Rectangle.ALIGN_RIGHT);
								c9.setBackgroundColor(Color.WHITE);
								t.addCell(c9);
							}
						}
					}
					
					myPhrase=new Phrase("  ROYALTY",new Font(baseFont, font, Font.BOLD));
					PdfPCell c13 = new PdfPCell(myPhrase);
					c13.setHorizontalAlignment(Rectangle.ALIGN_LEFT);
					c13.setBackgroundColor(Color.WHITE);
					t.addCell(c13);
					
					ArrayList<String> tDetails =new ArrayList<String>();
					tDetails=getTStructure("TOTAL", totalDetails);
					for(int i=0;i<tDetails.size();i++){
						myPhrase=new Phrase(tDetails.get(i),new Font(baseFont,font, Font.BOLD));
						PdfPCell c9 = new PdfPCell(myPhrase);
						c9.setHorizontalAlignment(Rectangle.ALIGN_RIGHT);
						c9.setBackgroundColor(Color.WHITE);
						t.addCell(c9);
					}
					
					myPhrase=new Phrase("  DMF 30%",new Font(baseFont, font, Font.NORMAL));
					PdfPCell c131 = new PdfPCell(myPhrase);
					c131.setHorizontalAlignment(Rectangle.ALIGN_LEFT);
					c131.setBackgroundColor(Color.WHITE);
					t.addCell(c131);
					
					tDetails=getTStructure("DMF30%", totalDetails);
					for(int i=0;i<tDetails.size();i++){
						myPhrase=new Phrase(tDetails.get(i),new Font(baseFont,font, Font.NORMAL));
						PdfPCell c9 = new PdfPCell(myPhrase);
						c9.setHorizontalAlignment(Rectangle.ALIGN_RIGHT);
						c9.setBackgroundColor(Color.WHITE);
						t.addCell(c9);
					}
					
					myPhrase=new Phrase("  NMET 2%",new Font(baseFont, font, Font.NORMAL));
					PdfPCell c132 = new PdfPCell(myPhrase);
					c132.setHorizontalAlignment(Rectangle.ALIGN_LEFT);
					c132.setBackgroundColor(Color.WHITE);
					t.addCell(c132);
					
					tDetails=getTStructure("NMET2%", totalDetails);
					for(int i=0;i<tDetails.size();i++){
						myPhrase=new Phrase(tDetails.get(i),new Font(baseFont,font, Font.NORMAL));
						PdfPCell c9 = new PdfPCell(myPhrase);
						c9.setHorizontalAlignment(Rectangle.ALIGN_RIGHT);
						c9.setBackgroundColor(Color.WHITE);
						t.addCell(c9);
					}
					
					myPhrase=new Phrase("  GIOPF 10%",new Font(baseFont, font, Font.NORMAL));
					PdfPCell c1321 = new PdfPCell(myPhrase);
					c1321.setHorizontalAlignment(Rectangle.ALIGN_LEFT);
					c1321.setBackgroundColor(Color.WHITE);
					t.addCell(c1321);
					
					tDetails=getTStructure("GIOPF10%", totalDetails);
					for(int i=0;i<tDetails.size();i++){
						myPhrase=new Phrase(tDetails.get(i),new Font(baseFont,font, Font.NORMAL));
						PdfPCell c9 = new PdfPCell(myPhrase);
						c9.setHorizontalAlignment(Rectangle.ALIGN_RIGHT);
						c9.setBackgroundColor(Color.WHITE);
						t.addCell(c9);
					}

					myPhrase=new Phrase("  TOTAL CHALLAN AMOUNT",new Font(baseFont, font, Font.BOLD));
					PdfPCell c134 = new PdfPCell(myPhrase);
					c134.setHorizontalAlignment(Rectangle.ALIGN_LEFT);
					c134.setBackgroundColor(Color.WHITE);
					t.addCell(c134);
					
					tDetails=getTStructure("TOTALPAYABLE", totalDetails);
					for(int i=0;i<tDetails.size();i++){
						myPhrase=new Phrase(tDetails.get(i),new Font(baseFont,font, Font.BOLD));
						PdfPCell c9 = new PdfPCell(myPhrase);
						c9.setHorizontalAlignment(Rectangle.ALIGN_RIGHT);
						c9.setBackgroundColor(Color.WHITE);
						t.addCell(c9);
					}
				}
				catch (Exception e) 
				{
					System.out.println("Error creating PDF form for Mining  : " + e);
					e.printStackTrace();
				}
				return t;	
			}

		 private PdfPTable createTableForGradeDetailsForBauxite(String royalitymt,String qtyXroyalitymt,String tds,String cellAmount,String processingFee,String dmf,String nmet,String totalChallanAmt,String quantity,ArrayList<Object> gradeDataBu,String firstCalc,String SecCalc)
			{
				float[] widths = {40,30};
				PdfPTable t = new PdfPTable(2);
				try
				{
					t.setWidthPercentage(100);
					t.setWidths(widths);
					
					Phrase myPhrase=new Phrase("  Inputs",new Font(baseFont,font, Font.BOLD));
					PdfPCell c = new PdfPCell(myPhrase);
					c.setHorizontalAlignment(Rectangle.ALIGN_LEFT);
					c.setBackgroundColor(Color.WHITE);
					t.addCell(c);
					
					myPhrase=new Phrase("Values",new Font(baseFont,font, Font.BOLD));
					PdfPCell c2 = new PdfPCell(myPhrase);
					c2.setHorizontalAlignment(Rectangle.ALIGN_RIGHT);
					c2.setBackgroundColor(Color.WHITE);
					t.addCell(c2);
					
					if(gradeDataBu.size()>0){
						for(int i=0;i<gradeDataBu.size();i++){
							String data=(String) gradeDataBu.get(i);
							if(data.matches(".*[A-Za-z].*")){
								myPhrase=new Phrase("  "+(String) gradeDataBu.get(i),new Font(baseFont,10, Font.NORMAL));
								PdfPCell c9 = new PdfPCell(myPhrase);
								c9.setHorizontalAlignment(Rectangle.ALIGN_LEFT);
								c9.setBackgroundColor(Color.WHITE);
								t.addCell(c9);
							}else{
								myPhrase=new Phrase((String) gradeDataBu.get(i),new Font(baseFont,10, Font.NORMAL));
								PdfPCell c9 = new PdfPCell(myPhrase);
								c9.setHorizontalAlignment(Rectangle.ALIGN_RIGHT);
								c9.setBackgroundColor(Color.WHITE);
								t.addCell(c9);
							}
						}
					}
					myPhrase=new Phrase("  (LME RATE * DOLLAR PRICE)",new Font(baseFont, font, Font.BOLD));
					PdfPCell c013 = new PdfPCell(myPhrase);
					c013.setHorizontalAlignment(Rectangle.ALIGN_LEFT);
					c013.setBackgroundColor(Color.WHITE);
					t.addCell(c013);
					
					myPhrase=new Phrase(firstCalc,new Font(baseFont,font, Font.BOLD));
					PdfPCell c09 = new PdfPCell(myPhrase);
					c09.setHorizontalAlignment(Rectangle.ALIGN_RIGHT);
					c09.setBackgroundColor(Color.WHITE);
					t.addCell(c09);
					
					myPhrase=new Phrase("  (LME RATE * DOLLAR PRICE) * GRADE RATE",new Font(baseFont, font, Font.BOLD));
					PdfPCell c913 = new PdfPCell(myPhrase);
					c913.setHorizontalAlignment(Rectangle.ALIGN_LEFT);
					c913.setBackgroundColor(Color.WHITE);
					t.addCell(c913);
					
					myPhrase=new Phrase(SecCalc,new Font(baseFont,font, Font.BOLD));
					PdfPCell c49 = new PdfPCell(myPhrase);
					c49.setHorizontalAlignment(Rectangle.ALIGN_RIGHT);
					c49.setBackgroundColor(Color.WHITE);
					t.addCell(c49);
					
					myPhrase=new Phrase("  ((LME RATE * DOLLAR PRICE) * GRADE RATE)* RATE/100",new Font(baseFont, font, Font.BOLD));
					PdfPCell c813 = new PdfPCell(myPhrase);
					c813.setHorizontalAlignment(Rectangle.ALIGN_LEFT);
					c813.setBackgroundColor(Color.WHITE);
					t.addCell(c813);
					
					myPhrase=new Phrase(royalitymt,new Font(baseFont,font, Font.BOLD));
					PdfPCell c9 = new PdfPCell(myPhrase);
					c9.setHorizontalAlignment(Rectangle.ALIGN_RIGHT);
					c9.setBackgroundColor(Color.WHITE);
					t.addCell(c9);
					
					myPhrase=new Phrase("  ROYALTY/M.T.",new Font(baseFont, font, Font.BOLD));
					PdfPCell c13 = new PdfPCell(myPhrase);
					c13.setHorizontalAlignment(Rectangle.ALIGN_LEFT);
					c13.setBackgroundColor(Color.WHITE);
					t.addCell(c13);
					
					myPhrase=new Phrase(royalitymt,new Font(baseFont,font, Font.BOLD));
					PdfPCell c9h = new PdfPCell(myPhrase);
					c9h.setHorizontalAlignment(Rectangle.ALIGN_RIGHT);
					c9h.setBackgroundColor(Color.WHITE);
					t.addCell(c9h);
					
					myPhrase=new Phrase("  QTY * ROYALTY/M.T.",new Font(baseFont, font, Font.BOLD));
					PdfPCell c131 = new PdfPCell(myPhrase);
					c131.setHorizontalAlignment(Rectangle.ALIGN_LEFT);
					c131.setBackgroundColor(Color.WHITE);
					t.addCell(c131);
					
					myPhrase=new Phrase(qtyXroyalitymt,new Font(baseFont,font, Font.BOLD));
					PdfPCell c91 = new PdfPCell(myPhrase);
					c91.setHorizontalAlignment(Rectangle.ALIGN_RIGHT);
					c91.setBackgroundColor(Color.WHITE);
					t.addCell(c91);
					
					myPhrase=new Phrase("  TDS",new Font(baseFont, font, Font.BOLD));
					PdfPCell c1312 = new PdfPCell(myPhrase);
					c1312.setHorizontalAlignment(Rectangle.ALIGN_LEFT);
					c1312.setBackgroundColor(Color.WHITE);
					t.addCell(c1312);
					
					myPhrase=new Phrase(tds,new Font(baseFont,font, Font.BOLD));
					PdfPCell c92 = new PdfPCell(myPhrase);
					c92.setHorizontalAlignment(Rectangle.ALIGN_RIGHT);
					c92.setBackgroundColor(Color.WHITE);
					t.addCell(c92);
					
					myPhrase=new Phrase("  Cell Amount",new Font(baseFont, font, Font.BOLD));
					PdfPCell c132 = new PdfPCell(myPhrase);
					c132.setHorizontalAlignment(Rectangle.ALIGN_LEFT);
					c132.setBackgroundColor(Color.WHITE);
					t.addCell(c132);
					
					myPhrase=new Phrase(cellAmount,new Font(baseFont,font, Font.BOLD));
					PdfPCell c93 = new PdfPCell(myPhrase);
					c93.setHorizontalAlignment(Rectangle.ALIGN_RIGHT);
					c93.setBackgroundColor(Color.WHITE);
					t.addCell(c93);
					
					myPhrase=new Phrase("  Processing Fees",new Font(baseFont, font, Font.BOLD));
					PdfPCell c133 = new PdfPCell(myPhrase);
					c133.setHorizontalAlignment(Rectangle.ALIGN_LEFT);
					c133.setBackgroundColor(Color.WHITE);
					t.addCell(c133);
					
					myPhrase=new Phrase(processingFee,new Font(baseFont,font, Font.BOLD));
					PdfPCell c94 = new PdfPCell(myPhrase);
					c94.setHorizontalAlignment(Rectangle.ALIGN_RIGHT);
					c94.setBackgroundColor(Color.WHITE);
					t.addCell(c94);
					
					myPhrase=new Phrase("  DMF (30%)",new Font(baseFont, font, Font.BOLD));
					PdfPCell c134 = new PdfPCell(myPhrase);
					c134.setHorizontalAlignment(Rectangle.ALIGN_LEFT);
					c134.setBackgroundColor(Color.WHITE);
					t.addCell(c134);
					
					myPhrase=new Phrase(dmf,new Font(baseFont,font, Font.BOLD));
					PdfPCell c95 = new PdfPCell(myPhrase);
					c95.setHorizontalAlignment(Rectangle.ALIGN_RIGHT);
					c95.setBackgroundColor(Color.WHITE);
					t.addCell(c95);
					
					myPhrase=new Phrase("  NMET (2%)",new Font(baseFont, font, Font.BOLD));
					PdfPCell c1344 = new PdfPCell(myPhrase);
					c1344.setHorizontalAlignment(Rectangle.ALIGN_LEFT);
					c1344.setBackgroundColor(Color.WHITE);
					t.addCell(c1344);
					
					myPhrase=new Phrase(nmet,new Font(baseFont,font, Font.BOLD));
					PdfPCell c96 = new PdfPCell(myPhrase);
					c96.setHorizontalAlignment(Rectangle.ALIGN_RIGHT);
					c96.setBackgroundColor(Color.WHITE);
					t.addCell(c96);
					
					myPhrase=new Phrase("  TOTAL CHALLAN AMOUNT",new Font(baseFont, font, Font.BOLD));
					PdfPCell c13444 = new PdfPCell(myPhrase);
					c13444.setHorizontalAlignment(Rectangle.ALIGN_LEFT);
					c13444.setBackgroundColor(Color.WHITE);
					t.addCell(c13444);
					
					myPhrase=new Phrase(totalChallanAmt,new Font(baseFont,font, Font.BOLD));
					PdfPCell c97 = new PdfPCell(myPhrase);
					c97.setHorizontalAlignment(Rectangle.ALIGN_RIGHT);
					c97.setBackgroundColor(Color.WHITE);
					t.addCell(c97);
				}
				catch (Exception e) 
				{
					System.out.println("Error creating PDF form for Mining  : " + e);
					e.printStackTrace();
				}
				return t;	
			}
		 
		 private PdfPTable createTableForGradeDetailsForBauxiteFirst(String royalitymt,String qtyXroyalitymt,String tds,String cellAmount,String processingFee,String dmf,String nmet,String totalChallanAmt,String quantity)
			{
				float[] widths = {40,30};
				PdfPTable t = new PdfPTable(2);
				try
				{
					t.setWidthPercentage(100);
					t.setWidths(widths);
					
					Phrase myPhrase=new Phrase("  Inputs",new Font(baseFont,font, Font.BOLD));
					PdfPCell c = new PdfPCell(myPhrase);
					c.setHorizontalAlignment(Rectangle.ALIGN_LEFT);
					c.setBackgroundColor(Color.WHITE);
					t.addCell(c);
					
					myPhrase=new Phrase("Values",new Font(baseFont,font, Font.BOLD));
					PdfPCell c2 = new PdfPCell(myPhrase);
					c2.setHorizontalAlignment(Rectangle.ALIGN_RIGHT);
					c2.setBackgroundColor(Color.WHITE);
					t.addCell(c2);
					
					myPhrase=new Phrase("  QUANTITY",new Font(baseFont, font, Font.BOLD));
					PdfPCell c137 = new PdfPCell(myPhrase);
					c137.setHorizontalAlignment(Rectangle.ALIGN_LEFT);
					c137.setBackgroundColor(Color.WHITE);
					t.addCell(c137);
					
					myPhrase=new Phrase(quantity,new Font(baseFont,font, Font.BOLD));
					PdfPCell c97 = new PdfPCell(myPhrase);
					c97.setHorizontalAlignment(Rectangle.ALIGN_RIGHT);
					c97.setBackgroundColor(Color.WHITE);
					t.addCell(c97);
					
					myPhrase=new Phrase("  ROYALTY/M.T.",new Font(baseFont, font, Font.BOLD));
					PdfPCell c13 = new PdfPCell(myPhrase);
					c13.setHorizontalAlignment(Rectangle.ALIGN_LEFT);
					c13.setBackgroundColor(Color.WHITE);
					t.addCell(c13);
					
					myPhrase=new Phrase(royalitymt,new Font(baseFont,font, Font.BOLD));
					PdfPCell c9 = new PdfPCell(myPhrase);
					c9.setHorizontalAlignment(Rectangle.ALIGN_RIGHT);
					c9.setBackgroundColor(Color.WHITE);
					t.addCell(c9);
					
					myPhrase=new Phrase("  QTY * ROYALTY/M.T.",new Font(baseFont, font, Font.BOLD));
					PdfPCell c131 = new PdfPCell(myPhrase);
					c131.setHorizontalAlignment(Rectangle.ALIGN_LEFT);
					c131.setBackgroundColor(Color.WHITE);
					t.addCell(c131);
					
					myPhrase=new Phrase(qtyXroyalitymt,new Font(baseFont,font, Font.BOLD));
					PdfPCell c91 = new PdfPCell(myPhrase);
					c91.setHorizontalAlignment(Rectangle.ALIGN_RIGHT);
					c91.setBackgroundColor(Color.WHITE);
					t.addCell(c91);
					
					myPhrase=new Phrase("  TDS",new Font(baseFont, font, Font.BOLD));
					PdfPCell c1312 = new PdfPCell(myPhrase);
					c1312.setHorizontalAlignment(Rectangle.ALIGN_LEFT);
					c1312.setBackgroundColor(Color.WHITE);
					t.addCell(c1312);
					
					myPhrase=new Phrase(tds,new Font(baseFont,font, Font.BOLD));
					PdfPCell c92 = new PdfPCell(myPhrase);
					c92.setHorizontalAlignment(Rectangle.ALIGN_RIGHT);
					c92.setBackgroundColor(Color.WHITE);
					t.addCell(c92);
					
					myPhrase=new Phrase("  Cell Amount",new Font(baseFont, font, Font.BOLD));
					PdfPCell c132 = new PdfPCell(myPhrase);
					c132.setHorizontalAlignment(Rectangle.ALIGN_LEFT);
					c132.setBackgroundColor(Color.WHITE);
					t.addCell(c132);
					
					myPhrase=new Phrase(cellAmount,new Font(baseFont,font, Font.BOLD));
					PdfPCell c93 = new PdfPCell(myPhrase);
					c93.setHorizontalAlignment(Rectangle.ALIGN_RIGHT);
					c93.setBackgroundColor(Color.WHITE);
					t.addCell(c93);
					
					myPhrase=new Phrase("  Processing Fees",new Font(baseFont, font, Font.BOLD));
					PdfPCell c133 = new PdfPCell(myPhrase);
					c133.setHorizontalAlignment(Rectangle.ALIGN_LEFT);
					c133.setBackgroundColor(Color.WHITE);
					t.addCell(c133);
					
					myPhrase=new Phrase(processingFee,new Font(baseFont,font, Font.BOLD));
					PdfPCell c94 = new PdfPCell(myPhrase);
					c94.setHorizontalAlignment(Rectangle.ALIGN_RIGHT);
					c94.setBackgroundColor(Color.WHITE);
					t.addCell(c94);
					
					myPhrase=new Phrase("  DMF (30%)",new Font(baseFont, font, Font.BOLD));
					PdfPCell c134 = new PdfPCell(myPhrase);
					c134.setHorizontalAlignment(Rectangle.ALIGN_LEFT);
					c134.setBackgroundColor(Color.WHITE);
					t.addCell(c134);
					
					myPhrase=new Phrase(dmf,new Font(baseFont,font, Font.BOLD));
					PdfPCell c95 = new PdfPCell(myPhrase);
					c95.setHorizontalAlignment(Rectangle.ALIGN_RIGHT);
					c95.setBackgroundColor(Color.WHITE);
					t.addCell(c95);
					
					myPhrase=new Phrase("  NMET (2%)",new Font(baseFont, font, Font.BOLD));
					PdfPCell c1344 = new PdfPCell(myPhrase);
					c1344.setHorizontalAlignment(Rectangle.ALIGN_LEFT);
					c1344.setBackgroundColor(Color.WHITE);
					t.addCell(c1344);
					
					myPhrase=new Phrase(nmet,new Font(baseFont,font, Font.BOLD));
					PdfPCell c96 = new PdfPCell(myPhrase);
					c96.setHorizontalAlignment(Rectangle.ALIGN_RIGHT);
					c96.setBackgroundColor(Color.WHITE);
					t.addCell(c96);
					
					myPhrase=new Phrase("  TOTAL CHALLAN AMOUNT",new Font(baseFont, font, Font.BOLD));
					PdfPCell c13444 = new PdfPCell(myPhrase);
					c13444.setHorizontalAlignment(Rectangle.ALIGN_LEFT);
					c13444.setBackgroundColor(Color.WHITE);
					t.addCell(c13444);
					
					myPhrase=new Phrase(totalChallanAmt,new Font(baseFont,font, Font.BOLD));
					PdfPCell c978 = new PdfPCell(myPhrase);
					c978.setHorizontalAlignment(Rectangle.ALIGN_RIGHT);
					c978.setBackgroundColor(Color.WHITE);
					t.addCell(c978);
				}
				catch (Exception e) 
				{
					System.out.println("Error creating PDF form for Mining  : " + e);
					e.printStackTrace();
				}
				return t;	
			}
		 
		 private PdfPTable createTableForGradeDetailsForOthers(ArrayList<Object> gradeDataOthers,Map totalDetails)
			{
				float[] widths = {40,30,30};
				PdfPTable t = new PdfPTable(3);
				
				try
				{
					t.setWidthPercentage(100);
					t.setWidths(widths);
					
					Phrase myPhrase=new Phrase("  Lease Area/Factors(sq mts)",new Font(baseFont,font, Font.BOLD));
					PdfPCell c = new PdfPCell(myPhrase);
					c.setHorizontalAlignment(Rectangle.ALIGN_LEFT);
					c.setBackgroundColor(Color.WHITE);
					t.addCell(c);
					
					myPhrase=new Phrase("Rate/TON",new Font(baseFont,font, Font.BOLD));
					PdfPCell c2 = new PdfPCell(myPhrase);
					c2.setHorizontalAlignment(Rectangle.ALIGN_RIGHT);
					c2.setBackgroundColor(Color.WHITE);
					t.addCell(c2);
					
					myPhrase=new Phrase("Payable",new Font(baseFont,font, Font.BOLD));
					PdfPCell c4 = new PdfPCell(myPhrase);
					c4.setHorizontalAlignment(Rectangle.ALIGN_RIGHT);
					c4.setBackgroundColor(Color.WHITE);
					t.addCell(c4);
					
					if(gradeDataOthers.size()>0){
						for(int i=0;i<gradeDataOthers.size();i++){
							String data=(String) gradeDataOthers.get(i);
							if(i==0){
								myPhrase=new Phrase("  "+(String) gradeDataOthers.get(i),new Font(baseFont,10, Font.NORMAL));
								PdfPCell c9 = new PdfPCell(myPhrase);
								c9.setHorizontalAlignment(Rectangle.ALIGN_LEFT);
								c9.setBackgroundColor(Color.WHITE);
								t.addCell(c9);
							}else{
							if(data.matches(".*[A-Za-z].*")){
								myPhrase=new Phrase("  "+(String) gradeDataOthers.get(i),new Font(baseFont,10, Font.NORMAL));
								PdfPCell c9 = new PdfPCell(myPhrase);
								c9.setHorizontalAlignment(Rectangle.ALIGN_LEFT);
								c9.setBackgroundColor(Color.WHITE);
								t.addCell(c9);
							}else{
								myPhrase=new Phrase((String) gradeDataOthers.get(i),new Font(baseFont,10, Font.NORMAL));
								PdfPCell c9 = new PdfPCell(myPhrase);
								c9.setHorizontalAlignment(Rectangle.ALIGN_RIGHT);
								c9.setBackgroundColor(Color.WHITE);
								t.addCell(c9);
							}
							}
						}
					}
					
					myPhrase=new Phrase("  TOTAL PAYABLE",new Font(baseFont, font, Font.BOLD));
					PdfPCell c134 = new PdfPCell(myPhrase);
					c134.setHorizontalAlignment(Rectangle.ALIGN_LEFT);
					c134.setBackgroundColor(Color.WHITE);
					t.addCell(c134);
					
					ArrayList<String> tDetails =new ArrayList<String>();
					tDetails=getTStructureOthers("TOTALPAYABLE1", totalDetails);
					for(int i=0;i<tDetails.size();i++){
						myPhrase=new Phrase(tDetails.get(i),new Font(baseFont,font, Font.BOLD));
						PdfPCell c9 = new PdfPCell(myPhrase);
						c9.setHorizontalAlignment(Rectangle.ALIGN_RIGHT);
						c9.setBackgroundColor(Color.WHITE);
						t.addCell(c9);
					}
				}
				catch (Exception e) 
				{
					System.out.println("Error creating PDF form for Mining  : " + e);
					e.printStackTrace();
				}
				return t;	
			}
			private PdfPTable createTableForEwalletDetails(String ewalletBalance,String totalPayable)
			{
				float[] widths = {50,20,30};
				PdfPTable t = new PdfPTable(3);
				
				try
				{
					t.setWidthPercentage(100);
					t.setWidths(widths);
					
					Phrase myPhrase1=new Phrase("",new Font(baseFont,font, Font.NORMAL));
					PdfPCell cq = new PdfPCell(myPhrase1);
					cq.setBackgroundColor(Color.WHITE);
					cq.disableBorderSide(Rectangle.BOTTOM);
					cq.disableBorderSide(Rectangle.LEFT);
					cq.disableBorderSide(Rectangle.RIGHT);
					t.addCell(cq);
					
					myPhrase1=new Phrase("",new Font(baseFont,font, Font.NORMAL));
					cq.setBackgroundColor(Color.WHITE);
					cq.disableBorderSide(Rectangle.BOTTOM);
					cq.disableBorderSide(Rectangle.LEFT);
					cq.disableBorderSide(Rectangle.RIGHT);
					t.addCell(cq);
					
					myPhrase1=new Phrase("",new Font(baseFont,font, Font.NORMAL));
					cq.setBackgroundColor(Color.WHITE);
					cq.disableBorderSide(Rectangle.BOTTOM);
					cq.disableBorderSide(Rectangle.LEFT);
					cq.disableBorderSide(Rectangle.RIGHT);
					t.addCell(cq);
					
					myPhrase1=new Phrase("E-Wallet Balance  ",new Font(baseFont,font, Font.NORMAL));
					PdfPCell c = new PdfPCell(myPhrase1);
					c.setBackgroundColor(Color.WHITE);
					c.setBorder(Rectangle.NO_BORDER);
					t.addCell(c);
					
					Phrase myPhrase=new Phrase(":",new Font(baseFont,font, Font.BOLD));
					PdfPCell cd1 = new PdfPCell(myPhrase);
					cd1.setBorder(Rectangle.NO_BORDER);
					cd1.setBackgroundColor(Color.WHITE);
					t.addCell(cd1);
					
					myPhrase=new Phrase(ewalletBalance,new Font(baseFont,font, Font.NORMAL));
					PdfPCell c1 = new PdfPCell(myPhrase);
					c1.setBorder(Rectangle.NO_BORDER);
					c1.setHorizontalAlignment(Rectangle.ALIGN_RIGHT);
					c1.setBackgroundColor(Color.WHITE);
					t.addCell(c1);
					
					myPhrase=new Phrase("",new Font(baseFont,fontsc, Font.NORMAL));
					PdfPCell cs = new PdfPCell(myPhrase);
					cs.setBorder(Rectangle.NO_BORDER);
					cs.setBackgroundColor(Color.WHITE);
					t.addCell(cs);
					
					myPhrase=new Phrase("",new Font(baseFont,fontsc, Font.NORMAL));
					PdfPCell cs1 = new PdfPCell(myPhrase);
					cs1.setBorder(Rectangle.NO_BORDER);
					cs1.setBackgroundColor(Color.WHITE);
					t.addCell(cs1);
					
					myPhrase=new Phrase("",new Font(baseFont,fontsc, Font.NORMAL));
					cs.setBorder(Rectangle.NO_BORDER);
					cs.setBackgroundColor(Color.WHITE);
					t.addCell(cs);
					
					myPhrase1=new Phrase("Total Payable  ",new Font(baseFont,font, Font.NORMAL));
					PdfPCell c2 = new PdfPCell(myPhrase1);
					c2.setBorder(Rectangle.NO_BORDER);
					c2.setBackgroundColor(Color.WHITE);
					t.addCell(c2);
					
					myPhrase=new Phrase(":",new Font(baseFont,font, Font.BOLD));
					cd1.setBorder(Rectangle.NO_BORDER);
					cd1.setBackgroundColor(Color.WHITE);
					t.addCell(cd1);
					
					myPhrase=new Phrase(totalPayable,new Font(baseFont, font, Font.BOLD));
					PdfPCell c3 = new PdfPCell(myPhrase);
					c3.setBorder(Rectangle.NO_BORDER);
					c3.setHorizontalAlignment(Rectangle.ALIGN_RIGHT);
					c3.setBackgroundColor(Color.WHITE);
					t.addCell(c3);
					
				}
				catch (Exception e) 
				{
					System.out.println("Error creating PDF form for Mining :  " + e);
					e.printStackTrace();
				}
				return t;	
			}
		 
		 private PdfPTable createChallanFooter(String nameInFull,String place,String date)
			{
				float[] widths = {70,80,50};
				PdfPTable t = new PdfPTable(3);
				
				try
				{
					t.setWidthPercentage(100);
					t.setWidths(widths);
					
					Phrase myPhrase2=new Phrase("",new Font(baseFont,font, Font.NORMAL));
					PdfPCell c2 = new PdfPCell(myPhrase2);
					c2.disableBorderSide(Rectangle.BOTTOM);
					c2.disableBorderSide(Rectangle.LEFT);
					c2.disableBorderSide(Rectangle.RIGHT);
					c2.setBackgroundColor(Color.WHITE);
					t.addCell(c2);
					
					myPhrase2=new Phrase("",new Font(baseFont,font, Font.NORMAL));
					c2.disableBorderSide(Rectangle.BOTTOM);
					c2.disableBorderSide(Rectangle.LEFT);
					c2.disableBorderSide(Rectangle.RIGHT);
					c2.setBackgroundColor(Color.WHITE);
					t.addCell(c2);
					
					myPhrase2=new Phrase("",new Font(baseFont,font, Font.NORMAL));
					c2.disableBorderSide(Rectangle.BOTTOM);
					c2.disableBorderSide(Rectangle.LEFT);
					c2.disableBorderSide(Rectangle.RIGHT);
					c2.setBackgroundColor(Color.WHITE);
					t.addCell(c2);
//					
//					myPhrase2=new Phrase("",new Font(baseFont,font, Font.NORMAL));
//					c2.disableBorderSide(Rectangle.BOTTOM);
//					c2.disableBorderSide(Rectangle.LEFT);
//					c2.disableBorderSide(Rectangle.RIGHT);
//					c2.setBackgroundColor(Color.WHITE);
//					t.addCell(c2);
					
					Phrase myPhrase1=new Phrase("     Place : PANAJI",new Font(baseFont,font, Font.NORMAL));
					PdfPCell c = new PdfPCell(myPhrase1);
					c.setBorder(Rectangle.NO_BORDER);
					c.setBackgroundColor(Color.WHITE);
					t.addCell(c);
					
					Phrase myPhrase=new Phrase("",new Font(baseFont,font, Font.NORMAL));
					PdfPCell c1 = new PdfPCell(myPhrase);
					c1.setBorder(Rectangle.NO_BORDER);
					c1.setBackgroundColor(Color.WHITE);
					t.addCell(c1);
					
					myPhrase1=new Phrase("",new Font(baseFont,font, Font.NORMAL));
					PdfPCell c02 = new PdfPCell(myPhrase1);
					c02.setBorder(Rectangle.NO_BORDER);
					c02.setBackgroundColor(Color.WHITE);
					t.addCell(c02);
					
//					myPhrase=new Phrase(" ",new Font(baseFont, font, Font.NORMAL));
//					PdfPCell c3 = new PdfPCell(myPhrase);
//					c3.setBorder(Rectangle.NO_BORDER);
//					c3.setBackgroundColor(Color.WHITE);
//					t.addCell(c3);
					
					myPhrase2=new Phrase(" ",new Font(baseFont,11, Font.NORMAL));
					c2.setBorder(Rectangle.NO_BORDER);
					c2.setBackgroundColor(Color.WHITE);
					t.addCell(c2);
					
					myPhrase2=new Phrase(" ",new Font(baseFont,11, Font.NORMAL));
					c2.setBorder(Rectangle.NO_BORDER);
					c2.setBackgroundColor(Color.WHITE);
					t.addCell(c2);
					
					myPhrase2=new Phrase(" ",new Font(baseFont,11, Font.NORMAL));
					c2.setBorder(Rectangle.NO_BORDER);
					c2.setBackgroundColor(Color.WHITE);
					t.addCell(c2);
					
//					myPhrase2=new Phrase(" ",new Font(baseFont,11, Font.NORMAL));
//					c2.setBorder(Rectangle.NO_BORDER);
//					c2.setBackgroundColor(Color.WHITE);
//					t.addCell(c2);
//					
					myPhrase2=new Phrase(" ",new Font(baseFont,11, Font.NORMAL));
					c2.setBorder(Rectangle.NO_BORDER);
					c2.setBackgroundColor(Color.WHITE);
					t.addCell(c2);
					
					myPhrase2=new Phrase(" ",new Font(baseFont,11, Font.NORMAL));
					c2.setBorder(Rectangle.NO_BORDER);
					c2.setBackgroundColor(Color.WHITE);
					t.addCell(c2);
					
					myPhrase2=new Phrase(" ",new Font(baseFont,11, Font.NORMAL));
					c2.setBorder(Rectangle.NO_BORDER);
					c2.setBackgroundColor(Color.WHITE);
					t.addCell(c2);
//					
//					myPhrase2=new Phrase(" ",new Font(baseFont,11, Font.NORMAL));
//					c2.setBorder(Rectangle.NO_BORDER);
//					c2.setBackgroundColor(Color.WHITE);
//					t.addCell(c2);
					
					myPhrase1=new Phrase("     Date  : "+date,new Font(baseFont,font, Font.NORMAL));
					PdfPCell c4 = new PdfPCell(myPhrase1);
					c4.setBorder(Rectangle.NO_BORDER);
					c4.setBackgroundColor(Color.WHITE);
					t.addCell(c4);
					
					myPhrase=new Phrase(" ",new Font(baseFont, font, Font.NORMAL));
					PdfPCell c5 = new PdfPCell(myPhrase);
					c5.setBorder(Rectangle.NO_BORDER);
					c5.setBackgroundColor(Color.WHITE);
					t.addCell(c5);
					
					myPhrase1=new Phrase("Authorized by:",new Font(baseFont,font, Font.NORMAL));
					PdfPCell c6 = new PdfPCell(myPhrase1);
					c6.setBorder(Rectangle.NO_BORDER);
					c6.setBackgroundColor(Color.WHITE);
					t.addCell(c6);
//					
//					myPhrase=new Phrase(nameInFull,new Font(baseFont, font, Font.NORMAL));
//					PdfPCell c7 = new PdfPCell(myPhrase);
//					c7.setBorder(Rectangle.NO_BORDER);
//					c7.setBackgroundColor(Color.WHITE);
//					t.addCell(c7);
					
				}
				catch (Exception e) 
				{
					System.out.println("Error creating PDF form for Mining :  " + e);
					e.printStackTrace();
				}
				return t;	
			}	
	private void printBill(ServletOutputStream servletOutputStream,HttpServletResponse response,String bill,String PDForm)
	{
		try
		{
			String formno=PDForm;
			response.setContentType("application/pdf");
			response.setHeader("Content-disposition","attachment;filename="+formno+".pdf");
			FileInputStream fis = new FileInputStream(bill);
			DataOutputStream outputStream = new	DataOutputStream(servletOutputStream);
			byte [] buffer = new byte [1024];
			int len = 0;
			while ((len = fis.read(buffer)) >= 0 ) 
			{
				outputStream.write(buffer, 0, len);
			}
			
			servletOutputStream.flush();
			servletOutputStream.close();
		}
		catch (Exception e) 
		{
			System.out.println("Error printing pdf form : " + e);
			e.printStackTrace();
		}
	}
	@SuppressWarnings("unchecked")
	public HashMap getDataForChallanDetails( int  id) {
		 
		Connection con = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		HashMap dataMap = new HashMap();
		String processFee=null;
		SimpleDateFormat ddmmyyyy = new SimpleDateFormat("dd-MM-yyyy");
		SimpleDateFormat yyyymmdd = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
		try {
			con = DBConnection.getConnectionToDB("AMS");
			pstmt = con.prepareStatement(GET_CHALLAN_DETAILS);
			pstmt.setInt(1, id);
			rs = pstmt.executeQuery();
			while (rs.next()) {
				processFee=rs.getString("PROCESSING_FEE");
				dataMap.put("processFee", processFee);
				dataMap.put("giopfRate", rs.getString("GIOPF_RATE"));
				dataMap.put("giopfQty", rs.getString("GIOPF_QTY"));
				if(rs.getString("CHALLAN_DATETIME")==""|| rs.getString("CHALLAN_DATETIME").contains("1900"))
				{
					dataMap.put("challanDate","");
				}
				else
				{	
					dataMap.put("challanDate", ddmmyyyy.format(yyyymmdd.parse(rs.getString("CHALLAN_DATETIME"))));
				}
				dataMap.put("ownerName", rs.getString("NAME"));
				dataMap.put("tcNo", rs.getString("TC_NO"));
				dataMap.put("minecode", rs.getString("MINE_CODE"));
				dataMap.put("mineralType", rs.getString("MINERAL_TYPE"));
				dataMap.put("royality",rs.getString("ROYALITY_FOR_MONTH"));
				dataMap.put("accPayment", rs.getString("PAYMENT_ACC_HEAD"));
				dataMap.put("challanType", rs.getString("CHALLAN_TYPE"));
				dataMap.put("finacialYear", rs.getString("FINANCIAL_YEAR"));
				dataMap.put("challanNo", rs.getString("CHALLAN_NO"));
				dataMap.put("year", rs.getString("YEAR"));
				dataMap.put("month", rs.getString("Month_Name"));
				dataMap.put("leaseName", rs.getString("MINING_LEASE"));
				dataMap.put("type", rs.getString("TYPE"));
				dataMap.put("orgName", rs.getString("ORGANIZATION_NAME"));
				dataMap.put("closedPermitNo", rs.getString("PERMIT_NO"));
				dataMap.put("totalPayablee", rs.getString("TOTAL_PAYABLE"));
				dataMap.put("ewalletTotal", rs.getString("TOTAL_EWALLET_PAYABLE"));
				dataMap.put("ewalletBalance", rs.getString("E_WALLET_BALANCE"));
				dataMap.put("orgnamePf", rs.getString("ORGANIZATION_NAME_PF"));
				dataMap.put("orgCode", rs.getString("ORGANIZATION_CODE"));
			}
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			DBConnection.releaseConnectionToDB(con, pstmt, rs);
		}

		return dataMap;
	}
	public ArrayList<Object> getGradeDetails(int  id) {
		 DecimalFormat df = new DecimalFormat("0.00");
		Connection con = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		ArrayList<Object> informationList = new ArrayList<Object>();
		try {
			int count=0;
			con = DBConnection.getConnectionToDB("AMS");
			pstmt = con.prepareStatement(GET_GRADE_DETAILS);
			pstmt.setInt(1, id);
			rs = pstmt.executeQuery();
			while (rs.next()) {
				count++;
				informationList.add( rs.getString("GRADE"));
				informationList.add( df.format(rs.getDouble("RATE")));
				informationList.add( df.format(rs.getDouble("QUANTITY")));
				informationList.add( df.format(Math.round(rs.getDouble("PAYABLE"))));
			}
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			DBConnection.releaseConnectionToDB(con, pstmt, rs);
		}
		return informationList;
	}
	public ArrayList<Object> getInputDetailsForBauxite(int  id) {
		 DecimalFormat df = new DecimalFormat("0.00");
		Connection con = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		ArrayList<Object> informationList = new ArrayList<Object>();
		try {
			int count=0;
			con = DBConnection.getConnectionToDB("AMS");
			pstmt = con.prepareStatement(GET_GRADE_DETAILS);
			pstmt.setInt(1, id);
			rs = pstmt.executeQuery();
			while (rs.next()) {
				count++;
				informationList.add( rs.getString("GRADE"));
				informationList.add( df.format(rs.getDouble("RATE")));
			}
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			DBConnection.releaseConnectionToDB(con, pstmt, rs);
		}
		return informationList;
	}
	public ArrayList<Object> getGradeDetailsForOthers(int  id) {
		 DecimalFormat df = new DecimalFormat("0.00");
		Connection con = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		ArrayList<Object> informationList = new ArrayList<Object>();
		try {
			int count=0;
			con = DBConnection.getConnectionToDB("AMS");
			pstmt = con.prepareStatement(GET_GRADE_DETAILS_FOR_OTHERS);
			pstmt.setInt(1, id);
			rs = pstmt.executeQuery();
			while (rs.next()) {
				count++;
				informationList.add( rs.getString("GRADE"));
				informationList.add( df.format(rs.getDouble("RATE")));
				informationList.add( df.format(rs.getDouble("PAYABLE")));
			}
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			DBConnection.releaseConnectionToDB(con, pstmt, rs);
		}
		return informationList;
	}
	
	@SuppressWarnings("unchecked")
	public HashMap getTotalDetailsForOthers(int  id) {
		 
		Connection con = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		HashMap dataMap = new HashMap();
		ArrayList<Object> informationList = new ArrayList<Object>();
		DecimalFormat df = new DecimalFormat("0.00");
		try {
			int count=0;
			con = DBConnection.getConnectionToDB("AMS");
			pstmt = con.prepareStatement(GET_TOTAL_FOR_OTHERS);
			pstmt.setInt(1, id);
			rs = pstmt.executeQuery();
			while (rs.next()) {
				count++;
				informationList = new ArrayList<Object>();
				informationList.add((rs.getString("RATE")));
				informationList.add( df.format(rs.getDouble("PAYABLE")));
				dataMap.put(rs.getString("GRADE").replaceAll("\\s",""), informationList);
			}
			
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			DBConnection.releaseConnectionToDB(con, pstmt, rs);
		}

		return dataMap;
	}
	@SuppressWarnings("unchecked")
	public HashMap getTotalCalulation( int  id,String processFee,String giopfRates,String giopfQtys) {
		 
		Connection con = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		HashMap dataMap = new HashMap();
		ArrayList<Object> informationList = new ArrayList<Object>();
		DecimalFormat df = new DecimalFormat("0.00");
		float processingFee=0;
		float giopfRate=0;
		float giopfQty=0;
		try {
			int count=0;
			con = DBConnection.getConnectionToDB("AMS");
			if(processFee!=null && !processFee.equals("")){
				processingFee=Float.parseFloat(processFee);
			}
			if(giopfRates!=null && !giopfRates.equals("")){
				giopfRate=Float.parseFloat(giopfRates);
			}
			if(giopfQtys!=null && !giopfQtys.equals("")){
				giopfQty=Float.parseFloat(giopfQtys);
			}
			pstmt = con.prepareStatement(" select 'TOTAL' as GRADE,isnull(sum(RATE),0) as RATE,isnull(sum(QUANTITY),0) as QUANTITY,isnull(sum(PAYABLE),0) as PAYABLE from AMS.dbo.CHALLAN_GRADE_DETAILS where CHALLAN_ID=? " +
					" union all " +
					" select 'DMF 30%' as GRADE,0 as RATE,isnull(sum(QUANTITY),0) as QUANTITY,isnull((30*sum(PAYABLE)/100),0) as PAYABLE  from AMS.dbo.CHALLAN_GRADE_DETAILS where CHALLAN_ID=? " +
					" union all " +
					" select 'NMET 2%' as GRADE,0 as RATE,isnull(sum(QUANTITY),0) as QUANTITY,isnull((2*sum(PAYABLE)/100),0) as PAYABLE from AMS.dbo.CHALLAN_GRADE_DETAILS where CHALLAN_ID=?  " +
					" union all " +
					" select 'GIOPF 10%' as GRADE,"+giopfRate+" as RATE,"+giopfQty+" as QUANTITY,isnull(("+giopfQty+"*"+giopfRate+"),0) as PAYABLE from AMS.dbo.CHALLAN_GRADE_DETAILS where CHALLAN_ID=?  " +
					" union all " +
					" select 'PROCESS FEE' as GRADE,"+processingFee+" AS RATE,isnull(sum(QUANTITY),0) as QUANTITY,isnull(("+processingFee+"*sum(QUANTITY)),0) as PAYABLE from AMS.dbo.CHALLAN_GRADE_DETAILS where CHALLAN_ID=?  " +
					" union all " +
					" select 'TOTAL PAYABLE' as GRADE,0 AS RATE,0 AS QUANTITY,isnull(round((sum(PAYABLE)+round((30*sum(PAYABLE)/100),0)+round((2*sum(PAYABLE)/100 ),0)+round(("+giopfQty+"*"+giopfRate+"),0)+round("+processingFee+"*sum(QUANTITY),0)),0),0)as PAYABLE from AMS.dbo.CHALLAN_GRADE_DETAILS where CHALLAN_ID=? " );
			pstmt.setInt(1, id);
			pstmt.setInt(2, id);
			pstmt.setInt(3, id);
			pstmt.setInt(4, id);
			pstmt.setInt(5, id);
			pstmt.setInt(6, id);
			rs = pstmt.executeQuery();
			while (rs.next()) {
				count++;
				informationList = new ArrayList<Object>();
				if( rs.getString("GRADE").equals("DMF 30%")||rs.getString("GRADE").equals("NMET 2%") ||rs.getString("GRADE").equals("TOTAL PAYABLE")){
					informationList.add("");
					informationList.add("");
					informationList.add(df.format(Math.round(rs.getDouble("PAYABLE"))));
				}else if(rs.getString("GRADE").equals("GIOPF 10%")){
					informationList.add( df.format(rs.getDouble("RATE")));
					informationList.add( df.format(rs.getDouble("QUANTITY")));
					informationList.add( df.format(Math.round(rs.getDouble("PAYABLE"))));
				}
				else if(rs.getString("GRADE").equals("TOTAL")){
					informationList.add("");
					informationList.add( df.format(rs.getDouble("QUANTITY")));
					informationList.add( df.format(Math.round(rs.getDouble("PAYABLE"))));
				}else{
					informationList.add( df.format(rs.getDouble("RATE")));
					informationList.add( df.format(rs.getDouble("QUANTITY")));
					informationList.add( df.format(Math.round(rs.getDouble("PAYABLE"))));
				}
				dataMap.put(rs.getString("GRADE").replaceAll("\\s",""), informationList);
			}
			
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			DBConnection.releaseConnectionToDB(con, pstmt, rs);
		}

		return dataMap;
	}
	
	@SuppressWarnings("unchecked")
	public HashMap getGradeDetailsForBauxite(int  id) {
		DecimalFormat df = new DecimalFormat("0.00");
		Connection con = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		HashMap dataMap = new HashMap();
		double LmeRate=0;
	    double tdsPerc=0;
		double dollarRate=0;
		double gradeRate=0;
		double rate=0;
		double cellAmt=0;
		double processFeeRate=0;
		double qty=0;
		double totalRoyality=0;
		double royality=0;
		double totalChallanAmt=0;
		try {
			con = DBConnection.getConnectionToDB("AMS");
			pstmt = con.prepareStatement(GET_GRADE_DETAILS);
			pstmt.setInt(1, id);
			rs = pstmt.executeQuery();
			while (rs.next()) {
				
				if(rs.getString("GRADE").equals("LME RATE")){
		        	   LmeRate=rs.getDouble("RATE");
		           }if(rs.getString("GRADE").equals("DOLLAR RATE")){
		        	   dollarRate=rs.getDouble("RATE");
		           }if(rs.getString("GRADE").equals("GRADE RATE")){
		        	   gradeRate=rs.getDouble("RATE");
		           }if(rs.getString("GRADE").equals("RATE")){
		        	   rate=rs.getDouble("RATE");
		           }if(rs.getString("GRADE").equals("QUANTITY")){
		        	   qty=rs.getDouble("RATE");
		           }if(rs.getString("GRADE").equals("CELL AMOUNT RATE")){
		        	   cellAmt=rs.getDouble("RATE");
		           }if(rs.getString("GRADE").equals("PROCESSING FEE RATE")){
		        	   processFeeRate=rs.getDouble("RATE");
		           }if(rs.getString("GRADE").equals("TDS PERCENTAGE")){
		        	   tdsPerc=(rs.getDouble("RATE"))/100;
		           }
			}
		           royality=(LmeRate*dollarRate*gradeRate)*(rate/100);
		           totalRoyality=((LmeRate*dollarRate*gradeRate)*(rate/100))* qty ;
		           totalChallanAmt=(totalRoyality)+(totalRoyality * 0.3)+(qty * processFeeRate)+(qty * cellAmt)+(totalRoyality * tdsPerc)+(totalRoyality * 0.02);
		           
		           dataMap.put("royality/mt", df.format(royality));
		           dataMap.put("qty*royality/mt", df.format(totalRoyality));
		           dataMap.put("tds", df.format(totalRoyality * tdsPerc));
		           dataMap.put("cellAmount", df.format(qty * cellAmt));
		           dataMap.put("processingFee", df.format(qty * processFeeRate));
		           dataMap.put("dmf", df.format(totalRoyality * 0.3));
		           dataMap.put("nmet", df.format(totalRoyality * 0.02));
		           dataMap.put("totalChallanAmt", df.format(totalChallanAmt));
		           dataMap.put("qty", df.format(qty));
		           dataMap.put("first", df.format(LmeRate*dollarRate));
		           dataMap.put("2nd", df.format(LmeRate*dollarRate*gradeRate));
		           dataMap.put("third", df.format(royality));
		           
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			DBConnection.releaseConnectionToDB(con, pstmt, rs);
		}
		return dataMap;
	}

	@SuppressWarnings("unchecked")
	public ArrayList<String> getTStructure (String keyValue,Map tDetails){
		ArrayList<String> total = new ArrayList<String>();
		if (tDetails.containsKey(keyValue)) {
			total=(ArrayList<String>) tDetails.get(keyValue);
		}else {
			ArrayList<String> emptyCell = new ArrayList<String>();
			emptyCell.add("");
			emptyCell.add("");
			emptyCell.add("");
			emptyCell.add("");
			total=(ArrayList<String>) emptyCell;
		}
		return total;
	}
	@SuppressWarnings("unchecked")
	public ArrayList<String> getTStructureOthers (String keyValue,Map tDetails){
		ArrayList<String> totalO = new ArrayList<String>();
		if (tDetails.containsKey(keyValue)) {
			totalO=(ArrayList<String>) tDetails.get(keyValue);
		}else {
			ArrayList<String> emptyCell = new ArrayList<String>();
			emptyCell.add("");
			emptyCell.add("");
			emptyCell.add("");
			totalO=(ArrayList<String>) emptyCell;
		}
		return totalO;
	}

}
