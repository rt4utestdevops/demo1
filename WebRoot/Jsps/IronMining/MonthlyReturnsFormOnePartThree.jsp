<%@ page language="java" import="java.util.*,java.text.SimpleDateFormat,t4u.functions.*,t4u.beans.*,t4u.common.*" pageEncoding="utf-8"%>
<%@ taglib uri="http://packtag.sf.net" prefix="pack" %>
<%
String path = request.getContextPath();
String basePath = request.getScheme()+"://"+request.getServerName()+":"+request.getServerPort()+path+"/";
if(request.getParameter("list")!=null){
	String list=request.getParameter("list").toString().trim();
	String[] str=list.split(",");
	int systemid=Integer.parseInt(str[0].trim());
	int customerid=Integer.parseInt(str[1].trim());
	int userid=Integer.parseInt(str[2].trim());
	String language=str[3].trim();
	LoginInfoBean loginInfo=new LoginInfoBean();
	loginInfo.setSystemId(systemid);
	loginInfo.setCustomerId(customerid);
	loginInfo.setUserId(userid);
	loginInfo.setLanguage(language);
	loginInfo.setZone(str[4].trim());
	loginInfo.setOffsetMinutes(Integer.parseInt(str[5].trim()));
	loginInfo.setSystemName(str[6].trim());
	loginInfo.setCategory(str[7].trim());
	loginInfo.setStyleSheetOverride("N");
	if(str.length>8){
		loginInfo.setCustomerName(str[8].trim());
	}
	if(str.length>9){
		loginInfo.setCategoryType(str[9].trim());
	}
	if(str.length>10){
		loginInfo.setUserName(str[10].trim());
	}
	session.setAttribute("loginInfoDetails",loginInfo);	
}	
CommonFunctions cf = new CommonFunctions();
cf.checkLoginInfo((LoginInfoBean) session.getAttribute("loginInfoDetails"), session, request, response);
String responseaftersubmit="''";
if(session.getAttribute("responseaftersubmit")!=null){
   	responseaftersubmit="'"+session.getAttribute("responseaftersubmit").toString()+"'";
	session.setAttribute("responseaftersubmit",null);
}		
LoginInfoBean loginInfo = (LoginInfoBean) session.getAttribute("loginInfoDetails");
String language = loginInfo.getLanguage();
int systemId = loginInfo.getSystemId();
int customerId = loginInfo.getCustomerId();
int autoGeneratedKeys = 0;
if(request.getParameter("autoGeneratedKeys") != null && !request.getParameter("autoGeneratedKeys").equals("")){
	autoGeneratedKeys = Integer.parseInt(request.getParameter("autoGeneratedKeys"));
}
int custId=0;
String custName="";
if(request.getParameter("custId") != null && !request.getParameter("custId").equals("")){
	custId = Integer.parseInt(request.getParameter("custId")); 
}
if(request.getParameter("custName") != null && !request.getParameter("custName").equals("")){
	custName = request.getParameter("custName");
}
String startdate="";
String enddate="";
if(request.getParameter("startdate") != null && !request.getParameter("startdate").equals("") && request.getParameter("enddate") != null && !request.getParameter("enddate").equals("")){
	startdate = request.getParameter("startdate");
	enddate = request.getParameter("enddate");
}
String typeOfOre = "";
if(request.getParameter("typeOfOre") != null && !request.getParameter("typeOfOre").equals("")){
	typeOfOre = request.getParameter("typeOfOre"); 
}
String reloadPrevRec = "";
if(request.getParameter("reloadPrevRec") != null && !request.getParameter("reloadPrevRec").equals("")){
	reloadPrevRec = request.getParameter("reloadPrevRec");
}
String loadForDashboardDetails="";
if(request.getParameter("loadForDashboardDetails") != null && !request.getParameter("loadForDashboardDetails").equals("")){
	loadForDashboardDetails = request.getParameter("loadForDashboardDetails"); 
}
String type = "";
if(request.getParameter("type") != null && !request.getParameter("type").equals("")){
	type = request.getParameter("type");
}
%>

<!DOCTYPE HTML>
<html>
  <head>
    <title>MonthlyReturnsFormOnePartThree</title>
	<meta http-equiv="pragma" content="no-cache">
	<meta http-equiv="cache-control" content="no-cache">
	<meta http-equiv="expires" content="0">    
	<meta http-equiv="keywords" content="keyword1,keyword2,keyword3">
	<meta http-equiv="description" content="This is my page">
	<style>
	  #ext-gen77{
	  border-color:white;
	  }
	  #ext-gen72{
	  border-color:white;
	  }
	  #ext-gen67{
	   border-color:white;
	  }
	  #ext-gen82{
	  border-color:white;
	  }
  </style>
  </head>
  
  <body>
  	<%if (loginInfo.getStyleSheetOverride().equals("Y")){%>
	<jsp:include page="../Common/ImportJSSandMining.jsp"/>
	<%}else{%>
	<jsp:include page="../Common/ImportJS.jsp" />
   	<%}%>
  <script><!--
  var dtcur = datecur;
  var autoGeneratedKeys = '<%=autoGeneratedKeys%>';
  var custId = '<%=custId%>';
  var custName = '<%=custName%>';
  var typeOfOre = '<%=typeOfOre%>';
  var loadMask = new Ext.LoadMask(Ext.getBody(), { msg: "Saving" });
  var loadForDashboardDetails = '<%=loadForDashboardDetails%>';
  var type = '<%=type%>';
  
  var formThreeDetailsStore = new Ext.data.JsonStore({
	    url: '<%=request.getContextPath()%>/MonthlyReturnsAction.do?param=getFormThreeDetails',
	    id: 'formThreeDetailsStoreId',
	    root: 'formThreeDetailsRoot',
	    remoteSort: true,
	    fields: ['productionReasonIndex', 'gradeWiseReasonIndex','remarksIndex','placeIndex','dateIndex','nameIndex','designationIndex']
	});
  var notePanelFour=new Ext.Panel({
		standardSubmit: true,
		frame:false,
		border:false,
		autoScroll:false,
		collapsible:false,
		width:'100%',
		id:'notePanelFourId',
		layout:'table',
		layoutConfig: {
			columns:1
		},
		items: [{
				html:'<div style="color:black;font-size:12px;margin:10px 0px 5px 0px;border-color: white;"><b>Enter Remarks,if any</b></div>'
				}]			    
	});	
		var innerPanelForNoteFour = new Ext.form.FormPanel({
		standardSubmit: true,	
		autoScroll:true,
		height:100,
		border:false,		
		id:'innerPanelForNoteFourId',
		layout:'table',	
		layoutConfig: {
			columns:2
		},	
		items:[{
				xtype: 'textarea',
				cls:'labelstyle',
				id:'noteFourId',
				width:815,
				height:90
				}]					
	    });
	
  var notePanelOne=new Ext.Panel({
		standardSubmit: true,
		frame:false,
		border:false,
		autoScroll:false,
		collapsible:false,
		width:'100%',
		id:'notePanelOneId',
		layout:'table',
		layoutConfig: {
			columns:1
		},
		items: [{
				html:'<div style="color:black;font-size:12px;margin:10px 0px 5px 0px;"><b>Give reason for increase/decrease in production/nil production(of primary or associate),If any during the month compared to the previous month</b></div>'
				}]			    
	});	
  var notePanelOne=new Ext.Panel({
		standardSubmit: true,
		frame:false,
		border:false,
		autoScroll:false,
		collapsible:false,
		width:'100%',
		id:'notePanelOneId',
		layout:'table',
		layoutConfig: {
			columns:1
		},
		items: [{
				html:'<div style="color:black;font-size:12px;margin:10px 0px 5px 0px;"><b>Give reason for increase/decrease in production/nil production(of primary or associate),If any during the month compared to the previous month</b></div>'
				}]			    
	});	
	var innerPanelForNoteOne = new Ext.form.FormPanel({
		standardSubmit: true,	
		autoScroll:true,
		height:100,
		border:false,		
		id:'innerPanelForNoteOneId',
		layout:'table',	
		layoutConfig: {
			columns:2
		},	
		items:[{
				xtype: 'textarea',
				cls:'labelstyle',
				id:'noteOneId',
				width:815,
				height:90
				}]					
	    });
	var notePanelTwo=new Ext.Panel({
		standardSubmit: true,
		frame:false,
		border:false,
		autoScroll:false,
		collapsible:false,
		width:'100%',
		id:'notePanelTwoId',
		layout:'table',
		layoutConfig: {
			columns:1
		},
		items: [{
				html:'<div style="color:black;font-size:12px;margin:0px 0px 5px 0px;"><b>Give reason for increase/decrease in grade wise ex-mine price(of primary or associate),If any during the month compared to the previous month</b></div>'
				}]			    
	});
	 var innerPanelForNoteTwo = new Ext.form.FormPanel({
		standardSubmit: true,	
		autoScroll:true,
		height:100,
		border:false,		
		id:'innerPanelForNoteTwoId',
		layout:'table',	
		layoutConfig: {
			columns:2
		},	
		items:[{
				xtype: 'textarea',
				cls:'labelstyle',
				id:'noteTwoId',
				width:815,
				height:90
				}]					
	    });
	var notePanelThree=new Ext.Panel({
		standardSubmit: true,
		frame:false,
		autoScroll:false,
		collapsible:false,
		border:false,
		width:'100%',
		id:'notePanelThreeId',
		layout:'table',
		layoutConfig: {
			columns:1
		},
		items: [{
				html:'<div style="color:black;font-size:12px;margin:0px 0px 5px 0px;border:0px;"><b>I certify that the information furnished above is correct and complete in all aspects</b></div>'
				}]			    
	});
	 var designationComboStore = new Ext.data.SimpleStore({
	      id: 'designationComboStoreId',
	      fields: ['Name', 'Value'],
	      autoLoad: true,
	      data: [
	          ['Owner','Owner'],
	          ['Agent','Agent'],
			  ['Mining Engineer','Mining Engineer'],
			  ['Manager','Manager'],
			  ['Authorized Signatory','Authorized Signatory'],
			  ['Leasee','Leasee']
	      ]
	  });
	  var Designationcombo = new Ext.form.ComboBox({
	      frame: true,
	      store: designationComboStore,
	      id: 'DesignationComboId',
	      width: 150,
	      cls: 'selectstylePerfect',
	      hidden: false,
	      allowBlank: false,
	      anyMatch: true,
	      onTypeAhead: true,
	      forceSelection: true,
	      enableKeyEvents: true,
	      mode: 'local',
	      emptyText: '',
	      triggerAction: 'all',
	      displayField: 'Name',
	      valueField: 'Value'
	  });
 	var innerPanelForNoteThree = new Ext.form.FormPanel({
		standardSubmit: true,	
		autoScroll:true,
		height:120,
		border:false,		
		id:'innerPanelForNoteThreeId',
		layout:'table',		
		layoutConfig: {
			columns : 6
		},
		items:[{
				xtype:'label',
				text:'*',
				cls:'mandatoryfield',
				id:'mandatoryplace'
				},{
				xtype: 'label',
				cls:'labelstyle',
				id:'NoteThreePlacelab',
				text: 'Place :'
				},{
				xtype:'textfield',
	    		cls:'selectstylePerfect',
	    		allowBlank: false,
	    		id:'NoteThreePlaceId',
	    		listeners: {change: function (field, newValue, oldValue){
                          		field.setValue(newValue.toUpperCase().trim());
                          		}
                       		}	    		
	    		},{
				xtype:'label',
				text:'*',
				cls:'mandatoryfield',
				id:'mandatorydate'
				},{
				xtype: 'label',
				cls:'labelstyle',
				id:'NoteThreeDatelab',
				text: 'Date'
				},{
				xtype: 'datefield',
				format:getDateFormat(),  		        
				id: 'NoteThreeDateId',  		        
				value: dtcur,
				cls:'labelstyle',
				vtype: 'daterange'
				},{
				xtype:'label',
				text:'*',
				cls:'mandatoryfield',
				id:'mandatoryname'
				},{
				xtype: 'label',
				cls:'labelstyle',
				id:'NoteThreeNamelab',
				text: 'Full Name :'
				},{
				xtype:'textfield',
	    		cls:'selectstylePerfect',
	    		allowBlank: false,
	    		id:'NoteThreeNameId',
	    		listeners: {change: function (field, newValue, oldValue){
                          		field.setValue(newValue.toUpperCase().trim());
                          		}
                       		}	    		
	    		},{
				xtype:'label',
				text:'*',
				cls:'mandatoryfield',
				id:'mandatorydesignation'
				},{
				xtype: 'label',
				cls:'labelstyle',
				id:'NoteThreeDesignationlab',
				text: 'Designation :'
				},Designationcombo]					
			
	    });
	var outerPanelWindowForFormThree = new Ext.Panel({
	       standardSubmit: true,
	       collapsible: false,
	       autoScroll: true,
	       width: screen.width-55,
	       height:395,
	       id: 'innerPanelForFormThreeId',
	       layout: 'table',
	       layoutConfig: {
	           columns: 1
	       },
	       items: [notePanelOne,innerPanelForNoteOne,notePanelTwo,innerPanelForNoteTwo,notePanelFour,innerPanelForNoteFour,notePanelThree,innerPanelForNoteThree]
   });
   var buttonPanel=new Ext.FormPanel({
       	id: 'buttonid',
       	cls:'colorid',
       	frame:true,
           buttons:[{
              		text: 'Back',
              		cls:'colorid',
              		iconCls:'backbutton',
              		hidden: false,
              		handler : function(){
              			var reloadPrevRec = "reloadPrevRec"; 
						var MonthlyReturnsFormOnePartFour='/Telematics4uApp/Jsps/IronMining/MonthlyReturnsFormOnePartFour.jsp?reloadPrevRec='+reloadPrevRec+'&autoGeneratedKeys='+autoGeneratedKeys+'&typeOfOre='+typeOfOre+'&custId='+custId+'&custName='+custName+'&startdate='+'<%=startdate%>'+'&enddate='+'<%=enddate%>'+'&loadForDashboardDetails='+loadForDashboardDetails+'&type='+type;
	              		parent.Ext.getCmp('partFourTab').enable();
	              		parent.Ext.getCmp('partThreeTab').disable();
	              		parent.Ext.getCmp('partFourTab').show();
						parent.Ext.getCmp('partFourTab').update("<iframe style='width:100%;height:525px;border:0;' src='"+MonthlyReturnsFormOnePartFour+"'></iframe>");
						}
              		},{
              		text: 'Save',
              		cls:'colorid',
              		iconCls:'savebutton',
              		handler : function(){ 
              		    if (Ext.getCmp('NoteThreePlaceId').getValue() == "") {
	                        Ext.example.msg("Enter Place");
	                        Ext.getCmp('NoteThreePlaceId').focus();
	                        return;
	                    }
	                    if (Ext.getCmp('NoteThreeDateId').getValue() == "") {
	                        Ext.example.msg("Enter Date");
	                        Ext.getCmp('NoteThreeDateId').focus();
	                        return;
	                    }
	                    if (Ext.getCmp('NoteThreeNameId').getValue() == "") {
	                        Ext.example.msg("Enter Name");
	                        Ext.getCmp('NoteThreeNameId').focus();
	                        return;
	                    }
	                    if (Ext.getCmp('DesignationComboId').getValue() == "") {
	                        Ext.example.msg("Enter Designation");
	                        Ext.getCmp('DesignationComboId').focus();
	                        return;
	                    }  
	                    Ext.MessageBox.confirm('Confirm', 'After saving,please do not forget to make a final submission of this form',showResult); 
              		}
              }]
	 });
	 function showResult(btn){
	 	if(btn == 'yes'){
	 		loadMask.show();
    		Ext.Ajax.request({
                url: '<%=request.getContextPath()%>/MonthlyReturnsAction.do?param=insertFormOnePartThree',
                method: 'POST',
                params: {
                	autoGeneratedId:autoGeneratedKeys,
                	production:Ext.getCmp('noteOneId').getValue(),
                	gradewise:Ext.getCmp('noteTwoId').getValue(),
                	remarks:Ext.getCmp('noteFourId').getValue(),
                	place:Ext.getCmp('NoteThreePlaceId').getValue(),
                	date:Ext.getCmp('NoteThreeDateId').getValue(),
                	name:Ext.getCmp('NoteThreeNameId').getValue(),
                	designation:Ext.getCmp('DesignationComboId').getValue()							                           	                       
                },
                success: function (response, options) {
                	loadMask.hide();
                    var message = response.responseText;
                    Ext.example.msg(message);
                    window.open("<%=request.getContextPath()%>/PDFForMining?autoGeneratedKeys="+autoGeneratedKeys);
                    var onload = 1;
                    if(loadForDashboardDetails != 'loadForDashboardDetails'){
	                    var MonthlyReturn='/Telematics4uApp/Jsps/IronMining/MonthlyReturn.jsp?custId='+custId+'&custName='+custName+'&onload='+onload+'&startdate='+'<%=startdate%>'+'&enddate='+'<%=enddate%>'+'&type='+type;
	       		  		parent.Ext.getCmp('generalLabourTab').enable();
						parent.Ext.getCmp('partThreeTab').disable();
						parent.Ext.getCmp('generalLabourTab').show();
						parent.Ext.getCmp('generalLabourTab').update("<iframe style='width:100%;height:525px;border:0;' src='"+MonthlyReturn+"'></iframe>");
					}else{
						var MonthlyReturn='/Telematics4uApp/Jsps/IronMining/MonthlyReturnDashboardDetails.jsp?custId='+custId+'&custName='+custName+'&onload='+onload+'&startdate='+'<%=startdate%>'+'&enddate='+'<%=enddate%>'+'&type='+type;
	       		  		parent.Ext.getCmp('monthlyReturnsDashboardDetailsTab').enable();
						parent.Ext.getCmp('partThreeTab').disable();
						parent.Ext.getCmp('monthlyReturnsDashboardDetailsTab').show();
						parent.Ext.getCmp('monthlyReturnsDashboardDetailsTab').update("<iframe style='width:100%;height:525px;border:0;' src='"+MonthlyReturn+"'></iframe>");
					}                            
                 },
                failure: function () {
                    loadMask.hide();
                    Ext.example.msg("Error");		                                
                }
            });
	 	}
	 } 
	 Ext.onReady(function () {
		    Ext.QuickTips.init();
		    Ext.form.Field.prototype.msgTarget = 'side';
		    outerPanel = new Ext.Panel({
		        title: 'Authorise Monthly Returns',		        
		        standardSubmit: true,
		        frame: false,
		        width: screen.width-22,
		        height:520,
		        renderTo: 'content',
		        cls: 'outerpanel',
		        layout: 'table',
		        layoutConfig: {
		            columns: 1
		        },
		        items: [outerPanelWindowForFormThree,buttonPanel]
		    });
		    if('<%=reloadPrevRec %>' == 'reloadPrevRec'){
			    formThreeDetailsStore.load({
			    	params:{autoGeneratedId:autoGeneratedKeys},
			    	callback:function(){
			    		if( formThreeDetailsStore.getCount()>0){
	              			  var record= formThreeDetailsStore.getAt(0);
	              			  Ext.getCmp('noteOneId').setValue(record.data['productionReasonIndex']);
							  Ext.getCmp('noteTwoId').setValue(record.data['gradeWiseReasonIndex']);
							  Ext.getCmp('noteFourId').setValue(record.data['remarksIndex']);
							  Ext.getCmp('NoteThreePlaceId').setValue(record.data['placeIndex']);
							  Ext.getCmp('NoteThreeDateId').setValue(record.data['dateIndex']);
							  Ext.getCmp('NoteThreeNameId').setValue(record.data['nameIndex']);
							  Ext.getCmp('DesignationComboId').setValue(record.data['designationIndex']);
						
	              		}
			    	}
			    });
		    }
		});
	</script>
  </body>
</html>
